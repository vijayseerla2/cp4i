*******************************************************************************
* Script generated on 2024-03-08   at 11.12.55 
* Script generated by user 'mqm' on host 'rllq1mq.poloralphlauren.com' 
* Queue manager name: IIBA1HD01 
* Queue manager platform: UNIX 
* Queue manager command level: (930/930)   
* Command issued: dmpmqcfg -x all -t all -o mqsc -m IIBA1HD01  
*******************************************************************************
ALTER QMGR +
*  ADVCAP(ENABLED) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
   CCSID(819) +
   CERTLABL('ibmwebspheremqiiba1hd01') +
   CLWLUSEQ(LOCAL) +
*  COMMANDQ(SYSTEM.ADMIN.COMMAND.QUEUE) +
   CONNAUTH('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.42) +
   DEADQ('IIBA1HD01.DEAD.LETTER.QUEUE') +
   MAXMSGL(104857600) +
   MAXUMSGS(20000) +
   MONQ(LOW) +
*  QMID(IIBA1HD01_2023-02-25_00.52.42) +
   SSLCRYP(' ') +
   SSLKEYR('/var/mqm/vols/iiba1hd01/qmgr/iiba1hd01/ssl/key') +
   SUITEB(NONE) +
*  VERSION(09030003) +
   FORCE
DEFINE QLOCAL('AAL.FOA.DEV.DEVOPSTEST.LOG.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.17) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.FOA.DEV.OMG2MQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
   TARGET('AAL.FOA.DEV.OMG2MQ.LOG.LOCAL') +
   REPLACE
DEFINE QLOCAL('AAL.FOA.DEV.OMG2MQ.LOG.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.17) +
   DISTL(NO) +
   MAXDEPTH(1000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.FOA.QA.OMG2MQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
   TARGET('AAL.FOA.QA.OMG2MQ.LOG.LOCAL') +
   REPLACE
DEFINE QLOCAL('AAL.FOA.QA.OMG2MQ.LOG.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.17) +
   DISTL(NO) +
   MAXDEPTH(100) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.CMS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.17) +
   TARGET('AAL.IP2MQ2JDA.CMS.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('JDA') +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.CMS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.CMS.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.CMS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.CMS.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.CMS.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.CMS.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.CMS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(300000) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.FOA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.FOA.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('JDA') +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.FOA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.FOA.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.FOA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.FOA.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.FOA.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.FOA.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.FOA.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(300000) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.FOE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.FOE.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('JDA') +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.FOE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.FOE.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.FOE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.FOE.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.FOE.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.FOE.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.FOE.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(300000) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.PRC') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.PRC.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('JDA') +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.PRC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.PRC.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IP2MQ2JDA.PRC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IP2MQ2JDA.PRC.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.PRC.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.PRC.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IP2MQ2JDA.PRC.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.CMS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.CMS.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('AAL.IPU.TO.MAIN.INPUT.CMS') +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.CMS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DESCR('CLub Monaco') +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.FOE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.FOE.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('AAL.IPU.TO.MAIN.INPUT.FOE') +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.FOE.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.PRC') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.PRC.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('AAL.IPU.TO.MAIN.INPUT.PRC') +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.INPUT.PRC.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.OUTPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.OUTPUT.LOCAL') +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.OUTPUT.CMS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.OUTPUT.CMS.LOCAL') +
   DESCR('AAL.IPU.TO.MAIN.OUTPUT.CMS') +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.OUTPUT.CMS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.OUTPUT.FOE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.OUTPUT.FOE.LOCAL') +
   DESCR('AAL.IPU.TO.MAIN.OUTPUT.FOE') +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.OUTPUT.FOE.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.OUTPUT.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.IPU.TO.MAIN.OUTPUT.PRC') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.IPU.TO.MAIN.OUTPUT.PRC.LOCAL') +
   DESCR('AAL.IPU.TO.MAIN.OUTPUT.PRC') +
   REPLACE
DEFINE QLOCAL('AAL.IPU.TO.MAIN.OUTPUT.PRC.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.18) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.18) +
   TARGET('AAL.JDA.TO.IPU.INPUT.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.CMS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.CMS.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('AAL.JDA.TO.IPU.INPUT.PRC') +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.CMS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.CMS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.FOE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.FOE.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('AAL.JDA.TO.IPU.INPUT.FOE') +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.FOE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.FOE.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(50000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.PRC') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.PRC.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('AAL.JDA.TO.IPU.INPUT.PRC') +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.PRC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.DETAILS.LOCAL') +
   DEFPSIST(YES) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.DETAILS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(3000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(6000000) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.INPUT.PRC.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.OUTPUT') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.45.50) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.45.50) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QALIAS('AAL.JDA.TO.IPU.OUTPUT.CMS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.JDA.TO.IPU.OUTPUT.CMS.LOCAL') +
   CLUSTER('MQCLUS_DEV') +
   DESCR('JDA to IP') +
   REPLACE
DEFINE QLOCAL('AAL.JDA.TO.IPU.OUTPUT.CMS.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MONQ(MEDIUM) +
   REPLACE
DEFINE QALIAS('AAL.OMG.TO.MQ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
   TARGET('AAL.OMG.TO.MQ.LOG.LOCAL') +
   REPLACE
DEFINE QLOCAL('AAL.OMG.TO.MQ.LOG.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(100) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('ACE.LOGQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('ADAPT.SAP.IIB.WHDEM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('AEM.SAP.DAILY.MATERIAL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('AEM.SAP.DAILY.MATERIAL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('AEM.SAP.DAILY.MATERIAL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('App_2.ERROR') +
*  ALTDATE(2023-12-19) +
*  ALTTIME(08.39.44) +
*  CRDATE(2023-12-19) +
*  CRTIME(08.39.44) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('App_2.ERROR.DETAILS') +
*  ALTDATE(2023-12-19) +
*  ALTTIME(08.39.24) +
*  CRDATE(2023-12-19) +
*  CRTIME(08.39.24) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.MATERIAL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.MATERIAL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.MATERIAL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.PROJECTION.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
*  CURDEPTH(6) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.PROJECTION.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.PROJECTION.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.WFWMATERIAL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.WFWMATERIAL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.WFWMATERIAL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.WFWPROJECTION.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.WFWPROJECTION.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.ANA.SF.WFWPROJECTION.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOSHIPMENTNA.ERROR') +
*  ALTDATE(2024-01-23) +
*  ALTTIME(03.06.11) +
*  CRDATE(2024-01-23) +
*  CRTIME(03.06.11) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOSHIPMENTNA.ERROR.DETAILS') +
*  ALTDATE(2024-01-23) +
*  ALTTIME(03.06.26) +
*  CRDATE(2024-01-23) +
*  CRTIME(03.06.26) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOSHIPMENTNA.IN') +
*  ALTDATE(2024-01-23) +
*  ALTTIME(03.00.14) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2024-01-23) +
*  CRTIME(02.59.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2B.IIB.NUO.NOSHIPMENTNA.OUT.LOG') +
*  ALTDATE(2024-01-23) +
*  ALTTIME(03.05.53) +
*  CRDATE(2024-01-23) +
*  CRTIME(03.05.53) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.GFE.DADB.NOMATMSTR.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.INVDELTAFEED.IN') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(06.50.59) +
*  CRDATE(2023-05-04) +
*  CRTIME(06.50.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.INVDELTAFEED.OUT.LOG') +
*  ALTDATE(2024-02-16) +
*  ALTTIME(00.50.03) +
*  CRDATE(2024-02-16) +
*  CRTIME(00.50.03) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOORDACK.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOTWAYORD.IN') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(13.57.29) +
*  CRDATE(2023-06-12) +
*  CRTIME(13.55.08) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.IIB.NUO.NOTWAYORD.OUT.LOG') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(13.59.03) +
*  CRDATE(2023-06-12) +
*  CRTIME(13.55.29) +
   DISTL(NO) +
   GET(DISABLED) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.INVDELTAFEED.IN') +
*  ALTDATE(2023-05-10) +
*  ALTTIME(10.10.02) +
*  CRDATE(2023-05-10) +
*  CRTIME(10.10.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BEMEA.SAP.IIB.INVDELTAFEED.IN.LOG') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(06.50.34) +
*  CRDATE(2023-05-04) +
*  CRTIME(06.50.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.EXTNDMATMSTR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.EXTNDMATMSTR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.PLACEHOLDERBASECURPR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.PLACEHOLDERBASECURPR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.PLACEHOLDERMATMSTR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.ANA.NUO.PLACEHOLDERMATMSTR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.GFE.NUO.NOBASCURPR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.19) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.GFE.NUO.NOBASCURPR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.GFE.NUO.NOBASCURPR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('B2BNA.GFE.NUO.NOBASCURPR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('BI.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('CUSTOMERNUMBERCOUNT.IN1') +
*  ALTDATE(2023-06-23) +
*  ALTTIME(05.20.54) +
*  CRDATE(2023-06-23) +
*  CRTIME(05.20.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('CUSTOMERNUMBERCOUNT.OUT') +
*  ALTDATE(2023-06-22) +
*  ALTTIME(04.48.43) +
*  CRDATE(2023-06-22) +
*  CRTIME(04.48.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEFAULT.ERROR') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(14.19.05) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
*  CURDEPTH(61) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('DEFAULT.ERROR.DETAILS') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(14.19.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
*  CURDEPTH(61) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('DEVOPS.TESTING') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('EDAM.DAM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.DAM.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.DAM.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.DAM.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.DAM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.DAM.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.IN_DAM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.IN_DAM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.IN_DAM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.IN_PAM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.IN_PAM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.IN_PAM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.OUT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.OUT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.ESB.ROUTER.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.OUT_AMS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.OUT_RQA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAM.PAM.OUT_RQN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('EDAMTEST') +
*  ALTDATE(2023-10-12) +
*  ALTTIME(11.09.20) +
*  CRDATE(2023-10-12) +
*  CRTIME(11.09.20) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('EDAMTEST1') +
*  ALTDATE(2023-10-27) +
*  ALTTIME(02.15.06) +
*  CRDATE(2023-10-27) +
*  CRTIME(02.15.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('EMBTRAK.DESIGN.SFDC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('EMBTRAK.DESIGN.SFDC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('EMBTRAK.DESIGN.SFDC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MONQ(MEDIUM) +
   REPLACE
DEFINE QLOCAL('EMBTRAK.DESIGN_TO_SFDC.DATAERRORS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('EMBTRAK.DESIGN_TO_SFDC.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ERP.BO.HTR.PI.ITIM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('ERP.HTR.ECC.PI.ITIM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   TARGET('ERP.HTR.ECC.PI.ITIM.LOCAL') +
   REPLACE
DEFINE QLOCAL('ERP.HTR.ECC.PI.ITIM.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   BOQNAME('ERP.BO.HTR.PI.ITIM') +
   BOTHRESH(5) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('ERP.HTR.ITIM.IMARKUP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   TARGET('ERP.HTR.ITIM.iMARKUP.LOCAL') +
   REPLACE
DEFINE QLOCAL('ERP.HTR.ITIM.IMARKUP.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   BOQNAME('ERP.BO.HTR.PI.ITIM') +
   BOTHRESH(5) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QALIAS('ERP.HTR.PI.ECC') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   TARGET('ERP.HTR.PI.ECC.LOCAL') +
   REPLACE
DEFINE QLOCAL('ERP.HTR.PI.ECC.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
   BOQNAME('ERP.BO.HTR.PI.ITIM') +
   BOTHRESH(5) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   QDEPTHHI(50) +
   QDPHIEV(ENABLED) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.SEC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.SEC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.HEARTBEAT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.IDTRACKING.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.IDTRACKING.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('ESB.COMMON.IDTRACKING.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GCD.RL.FB.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GCD.RL.FB.LOCAL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GCD_RL_FB_ERROR.LOCAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AAPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AAPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AAPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AAPD.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.56.52) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.56.52) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AAPD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AUDIT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AUDIT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AUDIT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AUDIT.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.58.48) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.58.48) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.AUDIT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BKNG.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(2000000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BKNG.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BKNG.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BKNG.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.01) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.01) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BKNG.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BRNDATT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BRNDATT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BRNDATT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BRNDATT.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.01) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.01) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.BRNDATT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.COREATT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.COREATT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.COREATT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.COREATT.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.15) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.15) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.COREATT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.CUSTM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
*  CURDEPTH(16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.CUSTM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
*  CURDEPTH(16) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.CUSTM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.CUSTM.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.15) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.15) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.CUSTM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IMAGE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IMAGE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IMAGE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IMAGE.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.15) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.15) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IMAGE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWBD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWBD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWBD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWBD.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.15) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.15) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWBD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWCD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWCD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWCD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.21) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.IWCD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.LOC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.LOC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.LOC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.LOC.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.LOC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MAT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MAT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MAT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MAT.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MAT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MPA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MPA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MPA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MPA.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.MPA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.NOCOR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.NOCOR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.NOCOR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.NOCOR.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.NOCOR.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.PROJ.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.PROJ.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.PROJ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.PROJ.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.PROJ.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.REPRO.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.REPRO.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.REPRO.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.RPA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.RPA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.RPA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.RPA.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.RPA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SEASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SEASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SEASN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SEASN.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(14.56.58) +
*  CRDATE(2023-06-20) +
*  CRTIME(14.55.20) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SEASN.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOP.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOP.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOPR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOPR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOPR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOPR.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.16) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZOPR.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZRD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.22) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZRD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZRD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZRD.IN.LOG') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(16.59.18) +
*  CRDATE(2023-06-20) +
*  CRTIME(16.59.18) +
   CUSTOM('CAPEXPRY(180000)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('GFE.GFE.AWS.LOADSUBS.SZRD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GTM.ACE.COMMAND') +
*  ALTDATE(2024-03-08) +
*  ALTTIME(10.02.22) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-04-24) +
*  CRTIME(09.19.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('GTM.ACE.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(09.24.24) +
*  CRDATE(2023-04-24) +
*  CRTIME(09.24.24) +
   DESCR('104857600') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GTM.ACE.LOG') +
*  ALTDATE(2024-03-08) +
*  ALTTIME(10.02.22) +
*  CRDATE(2023-04-24) +
*  CRTIME(09.17.37) +
   DISTL(NO) +
*  IPPROCS(20) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('GTM.MFT.COMMAND') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(09.38.46) +
*  CRDATE(2023-04-24) +
*  CRTIME(09.38.46) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('GTM.MFT.ERROR') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(09.37.54) +
*  CRDATE(2023-04-24) +
*  CRTIME(09.37.54) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('GTM.MFT.LOG') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(09.37.04) +
*  CRDATE(2023-04-24) +
*  CRTIME(09.37.04) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('GTM.PAYLOAD') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(13.11.16) +
*  CRDATE(2023-06-14) +
*  CRTIME(04.12.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('GTM.PERF.TEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MONQ(MEDIUM) +
   REPLACE
DEFINE QLOCAL('GTM.PERF.TEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MONQ(MEDIUM) +
   REPLACE
DEFINE QLOCAL('IIBA1HD01.DEAD.LETTER.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
*  CURDEPTH(9827) +
   DISTL(NO) +
   MAXDEPTH(100000) +
*  OPPROCS(2) +
   REPLACE
DEFINE QREMOTE('IIBA1QM01') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('ITEMMASTER.TEST.OUTPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('InputQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MONQ(HIGH) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.ERROR') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.19.29) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.19.29) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.ERROR.DETAILS') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.19.15) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.19.15) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.IN') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.18.35) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.18.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IA.IP.ALLOCRSLT.NA.IN.LOG') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.19.00) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.19.00) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.EU.IN') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(02.22.41) +
*  CRDATE(2023-10-18) +
*  CRTIME(08.18.12) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.EU.IN.TEST') +
*  ALTDATE(2023-10-18) +
*  ALTTIME(08.55.56) +
*  CRDATE(2023-10-18) +
*  CRTIME(08.55.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.EU.TRIGGER') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(01.57.35) +
*  CRDATE(2023-10-19) +
*  CRTIME(01.57.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.14.54) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.14.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR.DETAILS') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.14.36) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.14.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.INTER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(01.33.49) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.12.23) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.INTRNST.NA.TRIGGER') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.11.50) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.11.50) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.ERROR') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.20.36) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.20.36) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.ERROR.DETAILS') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.20.20) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.20.20) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.IN') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(08.06.06) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.19.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.NA.IN.LOG') +
*  ALTDATE(2023-06-13) +
*  ALTTIME(07.47.56) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.20.02) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.EU.TRIGGER') +
*  ALTDATE(2023-10-19) +
*  ALTTIME(02.00.38) +
*  CRDATE(2023-10-19) +
*  CRTIME(02.00.38) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.16.02) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.16.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR.DETAILS') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.15.47) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.15.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.INTER') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.15.30) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.15.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.ONORDR.NA.TRIGGER') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.15.10) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.15.10) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.17.18) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.17.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR.DETAILS') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.16.57) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.16.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.INTER') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.16.37) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.16.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.TRIGGER') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.16.20) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.16.20) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.18.21) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.18.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR.DETAILS') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.18.05) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.18.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.INTER') +
*  ALTDATE(2023-04-14) +
*  ALTTIME(00.01.52) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.17.51) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.TRIGGER') +
*  ALTDATE(2023-04-11) +
*  ALTTIME(12.17.36) +
*  CRDATE(2023-04-11) +
*  CRTIME(12.17.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('JDBC') +
*  ALTDATE(2023-09-13) +
*  ALTTIME(09.57.23) +
*  CRDATE(2023-09-13) +
*  CRTIME(09.57.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Label') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Label1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Label2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Lebelin') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.IIB.SAP.ADVTPROJ.IN') +
*  ALTDATE(2023-10-04) +
*  ALTTIME(06.34.43) +
*  CRDATE(2023-10-04) +
*  CRTIME(06.34.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.IIB.SAP.REPROCESS.OUT') +
*  ALTDATE(2023-10-06) +
*  ALTTIME(11.01.24) +
*  CRDATE(2023-10-06) +
*  CRTIME(11.01.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.MON.IIB.NOTIFY.IN') +
*  ALTDATE(2023-10-04) +
*  ALTTIME(06.33.58) +
*  CRDATE(2023-10-04) +
*  CRTIME(06.33.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.SAP.MON.WBS.IN.TMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MCOM.SAP.MON.WBS.LOG.TMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.AE.RS.CSV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.AE.RS.CSV.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.AE.RS.JSON.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.IIB.RS.ROUTETORS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.BI.IIB.TMPTBD039.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.BI.IIB.TMPTBD039.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.BI.IIB.TMPTBD039.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.BI.IIB.TMPTBD050.IN') +
*  ALTDATE(2023-06-14) +
*  ALTTIME(05.26.29) +
*  CRDATE(2023-06-14) +
*  CRTIME(05.26.29) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.BI.IIB.TMPTBD050.OUT') +
*  ALTDATE(2023-06-14) +
*  ALTTIME(05.27.07) +
*  CRDATE(2023-06-14) +
*  CRTIME(05.27.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.BI.IIB.TMPTBD050.OUT.LOG') +
*  ALTDATE(2023-06-14) +
*  ALTTIME(05.27.39) +
*  CRDATE(2023-06-14) +
*  CRTIME(05.27.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.FF.IIB.TMPTBD063.ERROR') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.37.50) +
*  CRDATE(2023-11-21) +
*  CRTIME(04.37.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.FF.IIB.TMPTBD063.ERROR.DETAILS') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.38.18) +
*  CRDATE(2023-11-21) +
*  CRTIME(04.38.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.FF.IIB.TMPTBD063.IN') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.36.33) +
*  CRDATE(2023-11-21) +
*  CRTIME(04.36.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.FF.IIB.TMPTBD063.OUT') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.36.55) +
*  CRDATE(2023-11-21) +
*  CRTIME(04.36.55) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.FF.IIB.TMPTBD063.OUT.LOG') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.37.17) +
*  CRDATE(2023-11-21) +
*  CRTIME(04.37.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD047.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD047.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.ANA.TMPTBD047.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(15.16.00) +
*  CRDATE(2023-06-05) +
*  CRTIME(15.16.00) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN.LOG') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(15.17.51) +
*  CRDATE(2023-06-05) +
*  CRTIME(15.17.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.STYLEVARIANT.OUT') +
*  ALTDATE(2023-06-05) +
*  ALTTIME(15.16.50) +
*  CRDATE(2023-06-05) +
*  CRTIME(15.16.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN') +
*  ALTDATE(2023-09-12) +
*  ALTTIME(09.53.46) +
*  CRDATE(2023-09-12) +
*  CRTIME(09.53.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN.LOG') +
*  ALTDATE(2023-09-12) +
*  ALTTIME(10.04.58) +
*  CRDATE(2023-09-12) +
*  CRTIME(10.04.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.BI.WEBSTYLE.OUT') +
*  ALTDATE(2023-09-12) +
*  ALTTIME(09.55.16) +
*  CRDATE(2023-09-12) +
*  CRTIME(09.55.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.ERROR') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.21.05) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.21.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.ERROR.DETAILS') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.21.28) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.21.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.IN') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.20.23) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.20.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.IN.LOG') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.20.44) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.20.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.INTER') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.22.09) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.22.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.OUT') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.23.07) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.23.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.T.ERROR') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.22.28) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.22.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.T.ERROR.DETAILS') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.22.46) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.22.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD061.TRIGGER') +
*  ALTDATE(2023-11-08) +
*  ALTTIME(02.21.50) +
*  CRDATE(2023-11-08) +
*  CRTIME(02.21.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.ERROR') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.38.06) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.38.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.ERROR.DETAILS') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.38.27) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.38.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.IN') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.37.25) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.37.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.IN.LOG') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.37.45) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.37.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.INTER') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.39.05) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.39.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.OUT') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.40.35) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.40.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.T.ERROR') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.39.55) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.39.55) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.T.ERROR.DETAILS') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.40.15) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.40.15) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.FF.TMPTBD062.TRIGGER') +
*  ALTDATE(2023-11-09) +
*  ALTTIME(10.38.47) +
*  CRDATE(2023-11-09) +
*  CRTIME(10.38.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
   BOQNAME('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.GFE.TMPTBD026.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.23) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.23) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.ERROR') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(09.03.02) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.33.00) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.ERROR.DETAILS') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(09.02.19) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.33.32) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.INTER') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(09.01.44) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.31.26) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.LOG') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(09.01.22) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.32.30) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.TRIGGER') +
*  ALTDATE(2023-05-07) +
*  ALTTIME(13.31.48) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.31.48) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.IN') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(08.58.08) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.30.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.IN.LOG') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(08.58.29) +
*  CRDATE(2023-05-07) +
*  CRTIME(13.31.07) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.IN') +
*  ALTDATE(2023-05-10) +
*  ALTTIME(10.23.27) +
*  CRDATE(2023-05-10) +
*  CRTIME(10.23.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.IN.LOG') +
*  ALTDATE(2023-05-10) +
*  ALTTIME(10.26.54) +
*  CRDATE(2023-05-10) +
*  CRTIME(10.26.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.OUT') +
*  ALTDATE(2024-01-09) +
*  ALTTIME(11.45.54) +
*  CRDATE(2024-01-09) +
*  CRTIME(11.45.54) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.OUT.LOG') +
*  ALTDATE(2024-01-09) +
*  ALTTIME(11.47.26) +
*  CRDATE(2024-01-09) +
*  CRTIME(11.47.26) +
*  CURDEPTH(20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.INTER') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(10.49.27) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.41.57) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.LOG') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.44.12) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.44.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.OUT') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.43.29) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.43.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.TRIGGER') +
*  ALTDATE(2023-05-11) +
*  ALTTIME(12.42.48) +
*  CRDATE(2023-05-11) +
*  CRTIME(12.42.48) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.IN') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.47.26) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.47.26) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.IN.LOG') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.53.34) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.53.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.INTER') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.50.56) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.50.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.OUT') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.54.07) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.54.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015.TRIGGER') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.39.43) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.39.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.INTER') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.51.59) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.51.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.OUT') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.57.13) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.57.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.TRIGGER') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.56.19) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.56.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.INTER') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.52.48) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.OUT') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.59.24) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.59.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.TRIGGER') +
*  ALTDATE(2023-03-28) +
*  ALTTIME(10.57.52) +
*  CRDATE(2023-03-28) +
*  CRTIME(10.57.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SV.IN') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(04.52.42) +
*  CRDATE(2023-05-04) +
*  CRTIME(04.52.42) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SV.IN.LOG') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(04.53.54) +
*  CRDATE(2023-05-04) +
*  CRTIME(04.53.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SV.INTER') +
*  ALTDATE(2023-05-04) +
*  ALTTIME(04.53.22) +
*  CRDATE(2023-05-04) +
*  CRTIME(04.53.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SV.OUT') +
*  ALTDATE(2023-08-06) +
*  ALTTIME(10.42.17) +
*  CRDATE(2023-08-06) +
*  CRTIME(10.42.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.O9.TMPTBD015SV.TRIGGER') +
*  ALTDATE(2023-08-06) +
*  ALTTIME(11.14.46) +
*  CRDATE(2023-08-06) +
*  CRTIME(11.14.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001.IN') +
*  ALTDATE(2024-02-09) +
*  ALTTIME(01.17.17) +
*  CRDATE(2024-02-09) +
*  CRTIME(01.17.17) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001.OUT') +
*  ALTDATE(2024-02-09) +
*  ALTTIME(01.17.53) +
*  CRDATE(2024-02-09) +
*  CRTIME(01.17.53) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
   BOQNAME('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT.RS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
   BOQNAME('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT.RS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.24) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD012.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD013.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD021.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD037.IN') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(09.55.08) +
*  CRDATE(2024-02-19) +
*  CRTIME(09.55.08) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD037.IN.LOG') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(09.56.57) +
*  CRDATE(2024-02-19) +
*  CRTIME(09.56.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD037.INTER') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(09.55.43) +
*  CRDATE(2024-02-19) +
*  CRTIME(09.55.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.IIB.SFCC.TMPTBD037X.INTER') +
*  ALTDATE(2024-02-19) +
*  ALTTIME(09.56.09) +
*  CRDATE(2024-02-19) +
*  CRTIME(09.56.09) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.LGTY.TMPTBD046.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.LGTY.TMPTBD046.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.LGTY.TMPTBD046.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.LGTY.TMPTBD046.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.LGTY.TMPTBD046.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD023.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD023.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.PLM.RS.TMPTBD023.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.RS.IIB.ROUTING.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.RS.PMC.TMPTBD032MFG.IN') +
*  ALTDATE(2023-04-18) +
*  ALTTIME(09.47.37) +
*  CRDATE(2023-04-18) +
*  CRTIME(09.47.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.RS.PMC.TMPTBD032MFG.IN.LOG') +
*  ALTDATE(2023-05-29) +
*  ALTTIME(07.52.08) +
*  CRDATE(2023-05-29) +
*  CRTIME(07.52.08) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.BI.SUPPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   BOQNAME('MDM.TMP.ND.VMS.BI.SUPPL.IN_BOQ') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.BI.SUPPL.IN_BOQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ASS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.O9.SUPPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.TMP.ND.VMS.SAP.ALL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.VMS.BI.SUPPLIER.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MDM.VMS.BI.SUPPLIER.OUT.TMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MFT.TEST1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MONGODB.DAILY.DATA') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(10.04.44) +
*  CRDATE(2023-12-11) +
*  CRTIME(10.04.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
*  CURDEPTH(4) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.ORDERUPDATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.25) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.REPORD.PK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.REPORD.PK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.BI.REPORD.PK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.CSR.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.CSR.ORDERNOTIFY.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.PGC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.ACTGC.VGC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.AGCDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.AGCDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FIRSTDATA.AGCDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FORTER.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FORTER.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.FORTER.ORDERUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.GCD.ORDCRTUPD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IIB.ORDEREVENT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IIB.ORDEREVENT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IIB.ORDEVTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IIB.ORDEVTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOSTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOSTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.26) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.26) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.FINPOSTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.SHIPREQUEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.SHIPREQUEST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.SHIPREQUEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.IP.SHIPREQUEST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.MADMB.ORDUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.MADMB.ORDUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.MADMB.ORDUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.MADMB.ORDUPDATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCRTUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCRTUPD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCUDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCUDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDCUDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDERSTATUS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDERSTATUS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.NARVAR.ORDERSTATUS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.ORDERACK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.ORDERACK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.ORDERACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.ORDERACK.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.CA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.DELTA.US.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.CA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.27) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.27) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SFCC.RTAM.EOD.US.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SSHEET.SHIPUPD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SSHEET.SHIPUPD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SSHEET.SHIPUPD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.SSHEET.SHIPUPD.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.RETURNASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.RETURNASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.RETURNASN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.RETURNASN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.RETURNASN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.RETURNASN.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQUEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQUEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQUEST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.WMS.SHIPREQUEST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDERNOTIFY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDERNOTIFY.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDNTFYDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDNTFYDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.OMS.ZETA.ORDNTFYDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.PMC.OMS.ITEMFEED.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.PMC.OMS.ITEMFEED.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.PMC.OMS.ITEMFEED.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.PMC.OMS.ITEMFEED.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.AWS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.AWS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.AWS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.AWS.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.BI.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.CODE.ORDERFEED.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.CODE.ORDERFEED.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDCREDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDCREDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDCREDUP.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.28) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OMS.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OPP.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OPP.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OPP.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OPP.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OPP.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OPP.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQ4.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQ4.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQ4.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQ4.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQ4.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQ4.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQA.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQA.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQA.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQA.ORDERCREATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQA.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.SFCC.OQA.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.UPS.ZETA.STOREHRS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSCM.UPS.ZETA.STOREHRS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSCM.UPS.ZETA.STOREHRS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSCM.UPS.ZETA.STOREHRS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.ESBERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.ESBERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.ESBOUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSCM.WMS.OMS.SHIPCONFIRM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.IA.OMS.DEMALLOC.IN') +
*  ALTDATE(2023-10-20) +
*  ALTTIME(04.18.58) +
*  CRDATE(2023-10-20) +
*  CRTIME(04.18.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.IA.OMS.DEMALLOC.IN.LOG') +
*  ALTDATE(2023-10-20) +
*  ALTTIME(04.20.20) +
*  CRDATE(2023-10-20) +
*  CRTIME(04.20.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.IA.OMS.DEMALLOC.OUT.LOG') +
*  ALTDATE(2023-10-20) +
*  ALTTIME(05.24.16) +
*  CRDATE(2023-10-20) +
*  CRTIME(05.24.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.JDA.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-10-20) +
*  ALTTIME(04.19.39) +
*  CRDATE(2023-10-20) +
*  CRTIME(04.19.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.IN') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(02.52.17) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.27.02) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.IN.LOG') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(02.52.37) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.30.39) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.IA.FULLINV.OUT.TEST') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(02.57.10) +
*  CRDATE(2024-01-08) +
*  CRTIME(02.57.10) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.DELTAINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FLINVDUP.IN') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(02.51.20) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.26.05) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FLINVDUP.IN.LOG') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(02.51.39) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.28.11) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FULLINV.IN') +
*  ALTDATE(2024-01-08) +
*  ALTTIME(02.51.59) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.26.24) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.JDA.FULLINV.IN.LOG') +
*  ALTDATE(2023-10-18) +
*  ALTTIME(05.29.57) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.29.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.OMS.SAP.RLEDEM.IN') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(06.32.36) +
*  CRDATE(2023-12-18) +
*  CRTIME(06.32.36) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.PMC.OMS.CBSPRICESHEET.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSMARGIN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSMARGIN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSVAT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSEU.SAP.OMS.CBSVAT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.BI.OMS.ITEMMSTR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.BI.OMS.ITEMMSTR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.BI.OMS.ITEMMSTR.IN') +
*  ALTDATE(2023-07-28) +
*  ALTTIME(06.19.19) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.BI.OMS.ITEMMSTR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
*  CURDEPTH(10) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.IN') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(09.58.56) +
*  CRDATE(2023-04-20) +
*  CRTIME(09.58.56) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.IN.LOG') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(09.26.58) +
*  CRDATE(2023-04-24) +
*  CRTIME(09.26.58) +
*  CURDEPTH(8) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(08.29.33) +
*  CRDATE(2023-04-20) +
*  CRTIME(08.29.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.IA.OMS.DEMALLOC.TRIGGER') +
*  ALTDATE(2023-04-20) +
*  ALTTIME(08.29.10) +
*  CRDATE(2023-04-20) +
*  CRTIME(08.29.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.JDA.OMS.DEMALLOC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.29) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.29) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
*  CURDEPTH(110) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDAILY.PFS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVDELTA.PFS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
*  CURDEPTH(15) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.MICROS.OMS.POSINVFULL.PFS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.NXTDAY') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(11.12.36) +
*  CRDATE(2023-05-09) +
*  CRTIME(11.12.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.ERROR') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(04.17.30) +
*  CRDATE(2023-04-21) +
*  CRTIME(04.17.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.ERROR.DETAILS') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(04.17.10) +
*  CRDATE(2023-04-21) +
*  CRTIME(04.17.10) +
*  CURDEPTH(1642) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.IN') +
*  ALTDATE(2023-05-15) +
*  ALTTIME(10.35.59) +
*  CRDATE(2023-04-21) +
*  CRTIME(04.16.00) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.IN.LOG') +
*  ALTDATE(2023-05-12) +
*  ALTTIME(10.08.08) +
*  CRDATE(2023-04-24) +
*  CRTIME(04.06.03) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.IN1') +
*  ALTDATE(2023-05-23) +
*  ALTTIME(08.50.22) +
*  CRDATE(2023-05-23) +
*  CRTIME(08.50.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.INTER') +
*  ALTDATE(2023-05-15) +
*  ALTTIME(11.08.47) +
*  CRDATE(2023-04-21) +
*  CRTIME(04.16.15) +
*  CURDEPTH(17) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.OUT') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(04.16.53) +
*  CRDATE(2023-04-21) +
*  CRTIME(04.16.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.DELTAINV.TRIGGER') +
*  ALTDATE(2023-04-21) +
*  ALTTIME(04.16.35) +
*  CRDATE(2023-04-21) +
*  CRTIME(04.16.35) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.ERROR') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(01.28.16) +
*  CRDATE(2023-04-26) +
*  CRTIME(01.28.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(01.28.02) +
*  CRDATE(2023-04-26) +
*  CRTIME(01.28.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.IN') +
*  ALTDATE(2023-05-15) +
*  ALTTIME(07.16.33) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.50.17) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.IN.LOG') +
*  ALTDATE(2023-06-06) +
*  ALTTIME(04.01.07) +
*  CRDATE(2023-04-26) +
*  CRTIME(01.27.28) +
   DISTL(NO) +
   MAXDEPTH(600000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.INTER') +
*  ALTDATE(2023-05-12) +
*  ALTTIME(12.54.44) +
*  CRDATE(2023-04-26) +
*  CRTIME(01.27.40) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.OUT') +
*  ALTDATE(2023-04-24) +
*  ALTTIME(10.50.52) +
*  CRDATE(2023-04-24) +
*  CRTIME(10.50.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.IA.FULLINV.TRIGGER') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(01.27.51) +
*  CRDATE(2023-04-26) +
*  CRTIME(01.27.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DAINVDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DAINVDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DAINVDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DAINVDUP.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DELTAINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
*  CURDEPTH(14) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DELTAINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.DELTAINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FLINVDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FLINVDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FLINVDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FLINVDUP.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(1000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FULLINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.JDA.FULLINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
*  CURDEPTH(15) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINV.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.DELTAINVREB.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.FULLINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRL.OMS.MICROS.FULLINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.DELTAINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.DELTAINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.30) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.30) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.DELTAINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.DELTAINV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.FULLINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.FULLINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.FULLINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.FULLINV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONF.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONF.OUT.DUP') +
*  ALTDATE(2023-09-09) +
*  ALTTIME(02.13.47) +
*  CRDATE(2023-09-09) +
*  CRTIME(02.13.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONF.WH.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFLIQ.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFLIQ.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFLIQ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFLIQ.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFLIQ.TRIGGER.DUP') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(06.16.16) +
*  CRDATE(2023-12-18) +
*  CRTIME(06.16.16) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFRLS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFRLS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFRLS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFRLS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRL.PKMS.OMS.SHIPCONFRLS.TRIGGER.DUP') +
*  ALTDATE(2023-09-09) +
*  ALTTIME(02.09.21) +
*  CRDATE(2023-09-09) +
*  CRTIME(02.09.21) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.SAP.OMS.DEMALLOC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.SAP.OMS.DEMALLOC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRL.SAP.OMS.DEMALLOC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRL.SAP.OMS.DEMALLOC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BAOZUN.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-10-31) +
*  ALTTIME(09.38.55) +
*  CRDATE(2023-10-31) +
*  CRTIME(09.38.55) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BAOZUN.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-10-31) +
*  ALTTIME(09.39.21) +
*  CRDATE(2023-10-31) +
*  CRTIME(09.39.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BAOZUN.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-10-31) +
*  ALTTIME(09.32.45) +
*  CRDATE(2023-10-31) +
*  CRTIME(09.32.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BAOZUN.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-10-31) +
*  ALTTIME(09.38.24) +
*  CRDATE(2023-10-31) +
*  CRTIME(09.38.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.FINAL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.NULLDATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.OMS.ITEMMSTR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.OMS.ITEMMSTR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.ITEMMSTR.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.SFCC.TEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.TEST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(200000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.BI.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.GTM.PAYLOAD') +
*  ALTDATE(2023-08-30) +
*  ALTTIME(15.30.21) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVDELTA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVDELTA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVDELTA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.31) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.31) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.INVFULL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.SHIPCANCEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.LGS.OMS.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVDAILY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVDAILY.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVDELTA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVDELTA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVDELTA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVDELTA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVFULL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVFULL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVFULL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.MICROS.OMS.POSINVFULL.OUT.LOG') +
*  ALTDATE(2023-10-10) +
*  ALTTIME(08.23.04) +
*  CRDATE(2023-10-10) +
*  CRTIME(08.23.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.CREATEORDER.IN') +
*  ALTDATE(2023-11-20) +
*  ALTTIME(07.44.23) +
*  CRDATE(2023-11-20) +
*  CRTIME(07.44.23) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.RETURNSHIPMT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.ORDERACK.ERROR') +
*  ALTDATE(2023-10-30) +
*  ALTTIME(09.24.14) +
*  CRDATE(2023-10-30) +
*  CRTIME(09.24.14) +
*  CURDEPTH(31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.ORDERACK.ERROR.DETAILS') +
*  ALTDATE(2023-10-30) +
*  ALTTIME(09.24.00) +
*  CRDATE(2023-10-30) +
*  CRTIME(09.24.00) +
*  CURDEPTH(31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.ORDERACK.IN') +
*  ALTDATE(2023-10-30) +
*  ALTTIME(09.23.17) +
*  CRDATE(2023-10-30) +
*  CRTIME(09.23.17) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.ORDERACK.OUT') +
*  ALTDATE(2023-10-30) +
*  ALTTIME(09.23.39) +
*  CRDATE(2023-10-30) +
*  CRTIME(09.23.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.ERROR') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(09.31.15) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.32.18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.ERROR.DETAILS') +
*  ALTDATE(2023-10-12) +
*  ALTTIME(10.31.51) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.31.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.IN') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(09.27.25) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.31.01) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.OUT') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(09.27.15) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.31.21) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.TRIGGER') +
*  ALTDATE(2023-10-12) +
*  ALTTIME(10.30.32) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.30.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.ERROR') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.45.12) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.38.18) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.ERROR.DETAILS') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.45.30) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.38.01) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.IN') +
*  ALTDATE(2024-02-22) +
*  ALTTIME(23.37.40) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.24.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INT.ERROR') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.45.41) +
*  CRDATE(2023-10-12) +
*  CRTIME(10.27.55) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INT.ERROR.DETAILS') +
*  ALTDATE(2023-11-21) +
*  ALTTIME(04.45.53) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.31.41) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INTER') +
*  ALTDATE(2024-02-22) +
*  ALTTIME(23.42.30) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.24.57) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.OUT') +
*  ALTDATE(2024-02-22) +
*  ALTTIME(23.42.51) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.27.31) +
*  CURDEPTH(19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.TRIGGER') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(07.24.37) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.24.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.RTAM.IN.TEMP.LOG') +
*  ALTDATE(2023-12-01) +
*  ALTTIME(08.54.30) +
*  CRDATE(2023-11-17) +
*  CRTIME(04.49.19) +
*  CURDEPTH(20100) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.ERROR') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(05.14.31) +
*  CRDATE(2023-10-31) +
*  CRTIME(10.32.12) +
*  CURDEPTH(18) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(05.14.22) +
*  CRDATE(2023-10-31) +
*  CRTIME(10.31.55) +
*  CURDEPTH(17) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.IN') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(04.58.40) +
*  CRDATE(2023-10-31) +
*  CRTIME(10.31.14) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-10-31) +
*  ALTTIME(10.32.45) +
*  CRDATE(2023-10-31) +
*  CRTIME(10.32.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.ERROR') +
*  ALTDATE(2023-11-17) +
*  ALTTIME(06.04.12) +
*  CRDATE(2023-11-17) +
*  CRTIME(06.04.12) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-11-17) +
*  ALTTIME(06.03.58) +
*  CRDATE(2023-11-17) +
*  CRTIME(06.03.58) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.IN') +
*  ALTDATE(2023-11-17) +
*  ALTTIME(06.02.22) +
*  CRDATE(2023-11-17) +
*  CRTIME(06.02.22) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHORTSHIP.ERROR') +
*  ALTDATE(2023-11-17) +
*  ALTTIME(06.05.07) +
*  CRDATE(2023-11-17) +
*  CRTIME(06.05.07) +
*  CURDEPTH(13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHORTSHIP.ERROR.DETAILS') +
*  ALTDATE(2023-11-17) +
*  ALTTIME(06.04.53) +
*  CRDATE(2023-11-17) +
*  CRTIME(06.04.53) +
*  CURDEPTH(13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BAOZUN.SHORTSHIP.IN') +
*  ALTDATE(2023-11-17) +
*  ALTTIME(06.03.15) +
*  CRDATE(2023-11-17) +
*  CRTIME(06.03.15) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.FINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.32) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.REPORD.PK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.SHIPUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.SHIPUPDATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.SHIPUPDATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BI.SHIPUPDATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BZ.RTAM.EOD.HK.INTER.ERROR') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(07.26.17) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.26.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.BZ.RTAM.EOD.HK.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(06.52.22) +
*  CRDATE(2023-10-11) +
*  CRTIME(06.52.22) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.D365.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.D365.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.D365.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.D365.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
*  CURDEPTH(48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.D365.FINPOST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.D365.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.FORTER.DUMMY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.FORTER.SHIPUPDATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.FORTER.SHIPUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.FORTER.SHIPUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.INTER.ERROR') +
*  ALTDATE(2023-10-13) +
*  ALTTIME(03.22.53) +
*  CRDATE(2023-10-13) +
*  CRTIME(03.22.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-10-13) +
*  ALTTIME(03.22.38) +
*  CRDATE(2023-10-13) +
*  CRTIME(03.22.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.GIVEX.VGCACT.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.LGS.SHIPREQUEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.LGS.SHIPREQUEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.MULTISYS.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.MULTISYS.FINPOST.QA2.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
*  CURDEPTH(32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
*  CURDEPTH(32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
*  CURDEPTH(138) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.RETRYFINPOST.ERROR') +
*  ALTDATE(2023-08-16) +
*  ALTTIME(09.29.05) +
*  CRDATE(2023-08-16) +
*  CRTIME(09.29.05) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.RETRYFINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-08-16) +
*  ALTTIME(09.28.51) +
*  CRDATE(2023-08-16) +
*  CRTIME(09.28.51) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.RETRYFINPOST.IN') +
*  ALTDATE(2023-08-16) +
*  ALTTIME(09.05.34) +
*  CRDATE(2023-08-16) +
*  CRTIME(09.05.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RELATE.RETRYFINPOST.TRIGGER') +
*  ALTDATE(2023-09-14) +
*  ALTTIME(10.27.11) +
*  CRDATE(2023-09-14) +
*  CRTIME(10.27.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RMA.PUBLISH.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.RMA.PUBLISH.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.CANCELRETURN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.CANCELRETURN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.CANCELRETURN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.CANCELRETURN.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.CANCELRETURN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.CANCELRETURN.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.ORDER.RELEASE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.ORDER.RELEASE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.RMA.CANCELRETURN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.RMA.DETAILS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.RMA.DETAILS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.RMA.DETAILS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.SHIPREQUEST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.SHIPREQUEST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.SHIPREQUEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SCALE.SHIPREQUEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.33) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.33) +
*  CURDEPTH(16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.PRICEBOOK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.PRICEBOOK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.ERROR') +
*  ALTDATE(2023-08-18) +
*  ALTTIME(04.24.55) +
*  CRDATE(2023-08-18) +
*  CRTIME(04.24.55) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.ERROR.DETAILS') +
*  ALTDATE(2023-08-18) +
*  ALTTIME(04.24.38) +
*  CRDATE(2023-08-18) +
*  CRTIME(04.24.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.IN') +
*  ALTDATE(2023-08-18) +
*  ALTTIME(04.23.34) +
*  CRDATE(2023-08-18) +
*  CRTIME(04.23.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.OUT') +
*  ALTDATE(2023-08-18) +
*  ALTTIME(04.23.48) +
*  CRDATE(2023-08-18) +
*  CRTIME(04.23.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.OUT') +
*  ALTDATE(2023-09-19) +
*  ALTTIME(09.50.43) +
*  CRDATE(2023-09-19) +
*  CRTIME(09.50.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.AP.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.AP.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.34) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.35) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.35) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.SDSTRINV.DEFAULT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SFCC.SDSTRINV.DEFAULT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.SSHEET.SHIPUPDATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDERNOTIFY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.OMS2AFTERSHIP.CREATETRACKING.REQUEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.PB.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.PB.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.DCINVDELTAKR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.DCINVDELTAKR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.DCINVFULLKR.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.DCINVFULLKR.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.DCINVFULLKR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.DCINVFULLKR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.RMA.DETAILS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.RMA.RECEIPT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCANCEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCANCEL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONF.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONF.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONF.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONFIRM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONFIRM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHIPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.36) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHORT.SHPCONFIRM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SCALE.OMS.SHORT.SHPCONFIRM.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.BI.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.MULTISYS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(5) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.RETRYCUST.ERROR') +
*  ALTDATE(2023-08-16) +
*  ALTTIME(08.22.45) +
*  CRDATE(2023-08-16) +
*  CRTIME(08.22.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.RETRYCUST.ERROR.DETAILS') +
*  ALTDATE(2023-08-16) +
*  ALTTIME(08.22.11) +
*  CRDATE(2023-08-16) +
*  CRTIME(08.22.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.RETRYCUST.IN') +
*  ALTDATE(2023-08-16) +
*  ALTTIME(08.26.30) +
*  CRDATE(2023-08-16) +
*  CRTIME(08.26.30) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.RETRYCUST.TRIGGER') +
*  ALTDATE(2023-09-14) +
*  ALTTIME(09.27.45) +
*  CRDATE(2023-09-14) +
*  CRTIME(09.27.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.UPDATECUST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.UPDATECUST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.SFCC.RELATE.UPDATECUST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TEST.ERROROUT') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(10.51.15) +
*  CRDATE(2023-07-27) +
*  CRTIME(10.51.15) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TEST.IN') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(10.49.59) +
*  CRDATE(2023-07-27) +
*  CRTIME(10.49.59) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TEST.ITEMOUT') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(10.50.51) +
*  CRDATE(2023-07-27) +
*  CRTIME(10.50.51) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TEST.OUTP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TEST.OUTP.Bankpro') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TMP.TEST.ERROR') +
*  ALTDATE(2023-06-01) +
*  ALTTIME(06.46.05) +
*  CRDATE(2023-06-01) +
*  CRTIME(06.46.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TMP.TEST.ERROR.DETAILS') +
*  ALTDATE(2023-06-01) +
*  ALTTIME(06.46.31) +
*  CRDATE(2023-06-01) +
*  CRTIME(06.46.31) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TMP.TEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLAP.TMP.TEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(04.35.57) +
*  CRDATE(2023-09-06) +
*  CRTIME(04.35.57) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(04.35.42) +
*  CRDATE(2023-09-06) +
*  CRTIME(04.35.42) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(04.23.35) +
*  CRDATE(2023-09-06) +
*  CRTIME(04.23.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(04.23.57) +
*  CRDATE(2023-09-06) +
*  CRTIME(04.23.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(06.07.50) +
*  CRDATE(2023-09-06) +
*  CRTIME(06.07.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(06.10.06) +
*  CRDATE(2023-09-06) +
*  CRTIME(06.10.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2023-09-06) +
*  ALTTIME(04.24.36) +
*  CRDATE(2023-09-06) +
*  CRTIME(04.24.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-06-19) +
*  ALTTIME(06.15.50) +
*  CRDATE(2023-06-19) +
*  CRTIME(06.15.50) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.16.58) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.16.58) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.26.56) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.26.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.27.48) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.27.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.IN') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.15.42) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.15.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.36.40) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.36.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
*  ALTDATE(2023-11-28) +
*  ALTTIME(06.50.12) +
*  CRDATE(2023-11-28) +
*  CRTIME(06.50.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
*  ALTDATE(2023-11-28) +
*  ALTTIME(06.49.13) +
*  CRDATE(2023-11-28) +
*  CRTIME(06.49.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.40.16) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.40.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(07.17.22) +
*  CRDATE(2023-11-22) +
*  CRTIME(07.17.22) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.OUT') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.37.53) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.37.53) +
*  CURDEPTH(8) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GCD.ORDCRTUPD.TRIGGER') +
*  ALTDATE(2023-11-22) +
*  ALTTIME(13.27.29) +
*  CRDATE(2023-11-22) +
*  CRTIME(13.27.29) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GECANCEL.IN') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(10.58.38) +
*  CRDATE(2023-05-25) +
*  CRTIME(10.58.38) +
*  CURDEPTH(92) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.GE.GESHIPCONF.IN') +
*  ALTDATE(2023-11-29) +
*  ALTTIME(04.31.06) +
*  CRDATE(2023-11-29) +
*  CRTIME(04.31.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEREVENT.IN') +
*  ALTDATE(2023-11-29) +
*  ALTTIME(04.31.28) +
*  CRDATE(2023-11-29) +
*  CRTIME(04.31.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR') +
*  ALTDATE(2023-12-05) +
*  ALTTIME(12.19.05) +
*  CRDATE(2023-12-05) +
*  CRTIME(12.19.05) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-12-05) +
*  ALTTIME(12.20.01) +
*  CRDATE(2023-12-05) +
*  CRTIME(12.20.01) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IIB.ORDEVTDUP.IN') +
*  ALTDATE(2023-11-29) +
*  ALTTIME(04.29.59) +
*  CRDATE(2023-11-29) +
*  CRTIME(04.29.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.RTVFEED.INTER') +
*  ALTDATE(2023-08-20) +
*  ALTTIME(04.38.06) +
*  CRDATE(2023-08-20) +
*  CRTIME(04.38.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FF.RTVFEED.NXTDAY') +
*  ALTDATE(2023-08-20) +
*  ALTTIME(04.40.34) +
*  CRDATE(2023-08-20) +
*  CRTIME(04.40.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.IN') +
*  ALTDATE(2023-06-19) +
*  ALTTIME(06.15.22) +
*  CRDATE(2023-06-19) +
*  CRTIME(06.15.22) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.FINPOST.EA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.LRD.RTVFEED.INTER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.37.44) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.37.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.LRD.RTVFEED.NXTDAY') +
*  ALTDATE(2023-08-20) +
*  ALTTIME(04.52.19) +
*  CRDATE(2023-08-20) +
*  CRTIME(04.52.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.ERROR') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.43.35) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.43.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.ERROR.DETAILS') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.43.21) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.43.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.IN') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.36.33) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.36.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.INTER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.37.21) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.37.21) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.LOG') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.39.44) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.39.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.NXTDAY') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(08.24.19) +
*  CRDATE(2023-07-27) +
*  CRTIME(08.24.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.NXTDAY.TRIGGER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(08.14.34) +
*  CRDATE(2023-07-27) +
*  CRTIME(08.14.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.IP.RTVFEED.TRIGGER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(08.12.46) +
*  CRDATE(2023-07-27) +
*  CRTIME(08.12.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.ERROR') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(10.59.38) +
*  CRDATE(2023-05-25) +
*  CRTIME(10.59.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.ERROR.DETAILS') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(10.59.11) +
*  CRDATE(2023-05-25) +
*  CRTIME(10.59.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RETORDER.IN') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(10.53.46) +
*  CRDATE(2023-05-25) +
*  CRTIME(10.53.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.IN') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.36.52) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.36.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTV.LOG') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(06.46.11) +
*  CRDATE(2023-07-27) +
*  CRTIME(06.46.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.RTVFEED.IN') +
*  ALTDATE(2023-07-31) +
*  ALTTIME(10.01.57) +
*  CRDATE(2023-07-31) +
*  CRTIME(10.01.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQDUP.IN') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(06.31.46) +
*  CRDATE(2023-12-18) +
*  CRTIME(06.31.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.IN') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(06.32.10) +
*  CRDATE(2023-12-18) +
*  CRTIME(06.32.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.LGS.SHIPREQUEST.OUT') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(06.33.55) +
*  CRDATE(2023-12-18) +
*  CRTIME(06.33.55) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.NARVAR.ORDSTATUS.IN') +
*  ALTDATE(2023-11-29) +
*  ALTTIME(04.42.26) +
*  CRDATE(2023-11-29) +
*  CRTIME(04.42.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.41.54) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.41.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR.DETAILS') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.41.27) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.41.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.IN') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.38.39) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.38.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.INTER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.39.41) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.39.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.LOG') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.39.02) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.39.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.41.07) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.41.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.40.46) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.40.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.OUT') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.40.28) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.40.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.TRIGGER') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.40.02) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.40.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINANCIALPOSTDUP.IN') +
*  ALTDATE(2023-05-09) +
*  ALTTIME(10.37.54) +
*  CRDATE(2023-05-09) +
*  CRTIME(10.37.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
*  CURDEPTH(160) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.LOG.INTER') +
*  ALTDATE(2023-07-25) +
*  ALTTIME(08.08.49) +
*  CRDATE(2023-07-25) +
*  CRTIME(08.08.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.37) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.37) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.SAP.FINPOSTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR') +
*  ALTDATE(2024-01-10) +
*  ALTTIME(05.23.28) +
*  CRDATE(2024-01-10) +
*  CRTIME(05.23.28) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2024-01-10) +
*  ALTTIME(05.23.56) +
*  CRDATE(2024-01-10) +
*  CRTIME(05.23.56) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(10.53.32) +
*  CRDATE(2023-05-25) +
*  CRTIME(10.53.32) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDERNOTIFY.OUT') +
*  ALTDATE(2024-01-24) +
*  ALTTIME(06.07.18) +
*  CRDATE(2024-01-24) +
*  CRTIME(06.07.18) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.ORDNFYVAT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.OMS.ZETA.VATINVC.LOG') +
*  ALTDATE(2023-06-19) +
*  ALTTIME(08.30.35) +
*  CRDATE(2023-06-19) +
*  CRTIME(08.30.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(05.11.36) +
*  CRDATE(2023-07-27) +
*  CRTIME(05.11.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(05.12.11) +
*  CRDATE(2023-07-27) +
*  CRTIME(05.12.11) +
*  CURDEPTH(8) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(05.20.14) +
*  CRDATE(2023-07-27) +
*  CRTIME(05.20.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.46.02) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.46.02) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.46.24) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.46.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDCREDUP.IN') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.36.14) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.36.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.47.00) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.47.00) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.47.21) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.47.21) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-07-05) +
*  ALTTIME(02.46.44) +
*  CRDATE(2023-07-05) +
*  CRTIME(02.46.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.LOG') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.33.27) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.33.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-07-05) +
*  ALTTIME(02.47.01) +
*  CRDATE(2023-07-05) +
*  CRTIME(02.47.01) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.SFCC.OMS.ORDERCREATEOUT.LOG') +
*  ALTDATE(2023-12-18) +
*  ALTTIME(07.51.06) +
*  CRDATE(2023-12-18) +
*  CRTIME(07.51.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLEU.UPS.ZETA.STOREHRS.IN') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(10.53.56) +
*  CRDATE(2023-05-25) +
*  CRTIME(10.53.56) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.ERROR') +
*  ALTDATE(2023-12-26) +
*  ALTTIME(07.32.15) +
*  CRDATE(2023-12-26) +
*  CRTIME(07.32.15) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.ERROR.DETAILS') +
*  ALTDATE(2023-12-26) +
*  ALTTIME(07.31.49) +
*  CRDATE(2023-12-26) +
*  CRTIME(07.31.49) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.ADN.RCNET.PAYMENT.IN') +
*  ALTDATE(2023-12-26) +
*  ALTTIME(07.30.45) +
*  CRDATE(2023-12-26) +
*  CRTIME(07.30.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.BLUJ.CONVEY.REGSHIP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.ORDFFLMCONF.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.POFNCTNLACK.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.POFNCTNLACK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.RETURNNTFCN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.RETURNNTFCN.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVADJ.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.IN') +
*  ALTDATE(2023-09-22) +
*  ALTTIME(13.20.13) +
*  CRDATE(2023-09-22) +
*  CRTIME(13.20.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRINVFULL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRUNITCST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRUNITCST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.OMS.VNDRUNITCST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.SFCC.VNDRINVFULL.IN') +
*  ALTDATE(2023-09-22) +
*  ALTTIME(12.58.28) +
*  CRDATE(2023-09-22) +
*  CRTIME(12.58.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.CHUB.SFCC.VNDRINVFULL.OUT') +
*  ALTDATE(2023-09-22) +
*  ALTTIME(12.58.50) +
*  CRDATE(2023-09-22) +
*  CRTIME(12.58.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.IIB.OMS.OUT.LOG') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(07.37.17) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.37.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.56.26) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.56.26) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.56.09) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.56.09) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.IN') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.53.15) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.53.15) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.55.18) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.55.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.58.03) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.58.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.57.38) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.57.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.55.42) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.55.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.OUT') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(05.43.22) +
*  CRDATE(2023-06-20) +
*  CRTIME(05.43.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.OUT.TMP') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.54.53) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.54.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.ORDERUPDATE.TRIGGER') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(04.54.23) +
*  CRDATE(2023-06-20) +
*  CRTIME(04.54.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPCAPCTYSTS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPDONUNMDRLS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPHOLDORD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPMNGDSTRULE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.AP.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORD.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
*  CURDEPTH(36) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPORDSHPREC.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRCPTSTATUS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRDYSHIPSTS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPRMVSHIPMT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSCHDLORD.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BI.REPSHIPMTSTS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BLUJ.PO.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.BLUJ.PO.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PO.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CHUB.PODUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.ERROR') +
*  ALTDATE(2024-01-04) +
*  ALTTIME(08.31.58) +
*  CRDATE(2024-01-04) +
*  CRTIME(08.31.58) +
*  CURDEPTH(11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.ERROR.DETAILS') +
*  ALTDATE(2024-01-04) +
*  ALTTIME(08.31.30) +
*  CRDATE(2024-01-04) +
*  CRTIME(08.31.30) +
*  CURDEPTH(11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.INVUPD.IN') +
*  ALTDATE(2024-01-04) +
*  ALTTIME(08.31.06) +
*  CRDATE(2024-01-04) +
*  CRTIME(08.31.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.CONVEY.PO.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.38) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.ERROR') +
*  ALTDATE(2023-12-27) +
*  ALTTIME(05.49.26) +
*  CRDATE(2023-12-27) +
*  CRTIME(05.49.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.ERROR.DETAILS') +
*  ALTDATE(2023-12-27) +
*  ALTTIME(05.48.45) +
*  CRDATE(2023-12-27) +
*  CRTIME(05.48.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.IN') +
*  ALTDATE(2023-12-27) +
*  ALTTIME(05.52.10) +
*  CRDATE(2023-12-27) +
*  CRTIME(05.52.10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.DD.SDORDREQ.OUT') +
*  ALTDATE(2023-12-27) +
*  ALTTIME(05.52.36) +
*  CRDATE(2023-12-27) +
*  CRTIME(05.52.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(07.51.57) +
*  CRDATE(2023-07-04) +
*  CRTIME(07.51.57) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(07.52.31) +
*  CRDATE(2023-07-04) +
*  CRTIME(07.52.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.FORTER.ORDUPDATE.IN') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(07.50.27) +
*  CRDATE(2023-07-04) +
*  CRTIME(07.50.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(09.56.35) +
*  CRDATE(2023-04-27) +
*  CRTIME(09.56.35) +
*  CURDEPTH(56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(10.53.39) +
*  CRDATE(2023-04-27) +
*  CRTIME(10.53.39) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(10.53.49) +
*  CRDATE(2023-04-27) +
*  CRTIME(10.53.49) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.IN') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(12.35.39) +
*  CRDATE(2023-04-27) +
*  CRTIME(10.53.27) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(09.40.51) +
*  CRDATE(2023-04-27) +
*  CRTIME(09.40.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(10.51.47) +
*  CRDATE(2023-04-27) +
*  CRTIME(10.51.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(09.57.15) +
*  CRDATE(2023-04-27) +
*  CRTIME(09.57.15) +
*  CURDEPTH(54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.GCD.ORDCRTUPD.TRIGGER') +
*  ALTDATE(2023-04-27) +
*  ALTTIME(10.54.25) +
*  CRDATE(2023-04-27) +
*  CRTIME(10.54.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.CHUBINVPURCH.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
*  CURDEPTH(126) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
*  CURDEPTH(93) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
*  CURDEPTH(165) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.NXTDAY') +
*  ALTDATE(2023-12-13) +
*  ALTTIME(05.42.41) +
*  CRDATE(2023-12-13) +
*  CRTIME(05.42.41) +
*  CURDEPTH(10) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.NXTDAY.TRIGGER') +
*  ALTDATE(2023-12-13) +
*  ALTTIME(05.42.24) +
*  CRDATE(2023-12-13) +
*  CRTIME(05.42.24) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.OUT.TMP') +
*  ALTDATE(2023-06-22) +
*  ALTTIME(04.40.26) +
*  CRDATE(2023-06-22) +
*  CRTIME(04.40.26) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TEST.IN') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(09.40.11) +
*  CRDATE(2023-06-16) +
*  CRTIME(09.40.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TEST.INTER') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(09.39.33) +
*  CRDATE(2023-06-16) +
*  CRTIME(09.39.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TEST.OUT.TMP') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(09.39.07) +
*  CRDATE(2023-06-16) +
*  CRTIME(09.39.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.IP.FINPOSTDUP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.IN') +
*  ALTDATE(2023-09-12) +
*  ALTTIME(04.37.33) +
*  CRDATE(2023-09-12) +
*  CRTIME(04.37.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCRTUPD.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(09.58.12) +
*  CRDATE(2024-01-02) +
*  CRTIME(09.58.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDCRTUPD.LOG') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(09.58.37) +
*  CRDATE(2024-01-02) +
*  CRTIME(09.58.37) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.NARVAR.ORDSTATUS.IN') +
*  ALTDATE(2024-01-02) +
*  ALTTIME(09.59.28) +
*  CRDATE(2024-01-02) +
*  CRTIME(09.59.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.DEL.US.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SFCC.RTAM.EOD.US.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SSHEET.SHIPUPD.IN') +
*  ALTDATE(2023-07-19) +
*  ALTTIME(14.44.43) +
*  CRDATE(2023-07-19) +
*  CRTIME(14.44.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.SSHEET.SHIPUPD.LOG') +
*  ALTDATE(2023-07-19) +
*  ALTTIME(14.45.00) +
*  CRDATE(2023-07-19) +
*  CRTIME(14.45.00) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.RETURNASN.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.50.40) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.50.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.50.22) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.50.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQDUP.IN') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.44.39) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.44.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.49.11) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.49.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.49.32) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.49.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.IN.ACE') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.45.23) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.45.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.47.51) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.47.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.OUT') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(10.01.02) +
*  CRDATE(2024-01-19) +
*  CRTIME(10.01.02) +
*  CURDEPTH(17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
*  ALTDATE(2024-01-19) +
*  ALTTIME(09.46.44) +
*  CRDATE(2024-01-19) +
*  CRTIME(09.46.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR') +
*  ALTDATE(2023-09-12) +
*  ALTTIME(04.36.44) +
*  CRDATE(2023-09-12) +
*  CRTIME(04.36.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
*  ALTDATE(2023-09-12) +
*  ALTTIME(04.36.28) +
*  CRDATE(2023-09-12) +
*  CRTIME(04.36.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN1') +
*  ALTDATE(2024-01-12) +
*  ALTTIME(19.00.52) +
*  CRDATE(2024-01-12) +
*  CRTIME(19.00.52) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.OMS.ZETA.ORDERNOTIFY.OUT') +
*  ALTDATE(2024-01-31) +
*  ALTTIME(06.41.18) +
*  CRDATE(2024-01-31) +
*  CRTIME(06.41.18) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.IN') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(01.02.39) +
*  CRDATE(2023-05-22) +
*  CRTIME(01.02.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.OUT') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(01.05.31) +
*  CRDATE(2023-05-22) +
*  CRTIME(01.05.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.BI.ORDERCREATE.TRIGGER') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(01.16.56) +
*  CRDATE(2023-05-22) +
*  CRTIME(01.16.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.CONTROL.OUT') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.40.20) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.40.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.40.51) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.40.51) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.41.13) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.41.13) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.ORDER.IN') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.41.56) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.38.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(50000000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.CODE.ORDERFEED.OUT') +
*  ALTDATE(2023-12-04) +
*  ALTTIME(10.39.11) +
*  CRDATE(2023-12-04) +
*  CRTIME(10.39.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(07.11.34) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.11.34) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(07.11.53) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.11.53) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(15.00.31) +
*  CRDATE(2023-05-22) +
*  CRTIME(15.00.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.LOG') +
*  ALTDATE(2023-10-11) +
*  ALTTIME(07.37.33) +
*  CRDATE(2023-10-11) +
*  CRTIME(07.37.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(15.23.11) +
*  CRDATE(2023-05-22) +
*  CRTIME(15.23.11) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.OMS.EDISHPTRACK.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.UPS.ZETA.STOREHRS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.IN') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(07.33.08) +
*  CRDATE(2023-06-08) +
*  CRTIME(03.37.31) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(5948000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.LOG') +
*  ALTDATE(2023-06-08) +
*  ALTTIME(06.59.33) +
*  CRDATE(2023-06-08) +
*  CRTIME(06.59.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.IIB.STRINFDUP.OUT') +
*  ALTDATE(2023-12-06) +
*  ALTTIME(12.20.23) +
*  CRDATE(2023-12-06) +
*  CRTIME(12.20.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.ERROR') +
*  ALTDATE(2023-06-02) +
*  ALTTIME(09.27.49) +
*  CRDATE(2023-06-02) +
*  CRTIME(09.27.49) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.ERROR.DETAILS') +
*  ALTDATE(2023-06-02) +
*  ALTTIME(09.27.00) +
*  CRDATE(2023-06-02) +
*  CRTIME(09.27.00) +
*  CURDEPTH(4) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.IN') +
*  ALTDATE(2023-12-11) +
*  ALTTIME(07.32.50) +
*  CRDATE(2023-05-25) +
*  CRTIME(09.33.55) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(5948000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.OUT') +
*  ALTDATE(2023-08-14) +
*  ALTTIME(11.21.03) +
*  CRDATE(2023-08-14) +
*  CRTIME(11.21.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSRLNA.YEXT.SFCC.STRINF.TRIGGER') +
*  ALTDATE(2023-05-25) +
*  ALTTIME(09.35.58) +
*  CRDATE(2023-05-25) +
*  CRTIME(09.35.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSSAP.IIB.OMS.WHDEM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OMSTESTING1.QUEUE') +
*  ALTDATE(2024-02-15) +
*  ALTTIME(04.54.57) +
*  CRDATE(2024-02-12) +
*  CRTIME(04.52.19) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OMSTESTING2.QUEUE') +
*  ALTDATE(2024-02-12) +
*  ALTTIME(05.57.00) +
*  CRDATE(2024-02-12) +
*  CRTIME(05.57.00) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OMSTESTING3.QUEUE') +
*  ALTDATE(2024-02-12) +
*  ALTTIME(05.58.17) +
*  CRDATE(2024-02-12) +
*  CRTIME(05.58.17) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OMSTESTING4.QUEUE') +
*  ALTDATE(2024-02-12) +
*  ALTTIME(06.00.19) +
*  CRDATE(2024-02-12) +
*  CRTIME(05.58.41) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OMSTESTING5.QUEUE') +
*  ALTDATE(2024-02-12) +
*  ALTTIME(05.59.16) +
*  CRDATE(2024-02-12) +
*  CRTIME(05.59.16) +
*  CURDEPTH(9) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('OM_QMGR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   INITQ('SYSTEM.CHANNEL.INITQ') +
   MAXDEPTH(5000) +
   TRIGGER +
   TRIGDATA('SYSTEM.SSL.SVRCONN') +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.ERROR') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(09.40.25) +
*  CRDATE(2023-06-15) +
*  CRTIME(09.40.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.ERROR.DETAILS') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(09.40.07) +
*  CRDATE(2023-06-15) +
*  CRTIME(09.40.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.IN') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(09.39.04) +
*  CRDATE(2023-06-15) +
*  CRTIME(09.39.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.INTER') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(09.39.38) +
*  CRDATE(2023-06-15) +
*  CRTIME(09.39.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(09.41.03) +
*  CRDATE(2023-06-15) +
*  CRTIME(09.41.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-06-15) +
*  ALTTIME(09.40.42) +
*  CRDATE(2023-06-15) +
*  CRTIME(09.40.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.INBOUNDASN.IN') +
*  ALTDATE(2023-06-16) +
*  ALTTIME(04.47.25) +
*  CRDATE(2023-06-16) +
*  CRTIME(04.47.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OMS.OPT.RETURN.CANCEL.IN') +
*  ALTDATE(2023-08-29) +
*  ALTTIME(04.11.22) +
*  CRDATE(2023-08-29) +
*  CRTIME(04.11.22) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(05.08.53) +
*  CRDATE(2023-07-04) +
*  CRTIME(05.08.53) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR.DETAILS') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(05.09.32) +
*  CRDATE(2023-07-04) +
*  CRTIME(05.09.32) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(05.22.07) +
*  CRDATE(2023-07-04) +
*  CRTIME(05.22.07) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.OMS.INVENTORYRECEIPT.OUT') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(05.10.20) +
*  CRDATE(2023-07-04) +
*  CRTIME(05.10.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.IN') +
*  ALTDATE(2023-07-04) +
*  ALTTIME(05.08.04) +
*  CRDATE(2023-07-04) +
*  CRTIME(05.08.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.INVENTORYRECEIPT.TRIGGER') +
*  ALTDATE(2023-07-11) +
*  ALTTIME(04.26.58) +
*  CRDATE(2023-07-11) +
*  CRTIME(04.26.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(09.44.27) +
*  CRDATE(2023-06-30) +
*  CRTIME(09.44.27) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR.DETAILS') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(09.43.58) +
*  CRDATE(2023-06-30) +
*  CRTIME(09.43.58) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.IN') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(09.43.03) +
*  CRDATE(2023-06-30) +
*  CRTIME(09.43.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.OPT.SAP.OUTBOUNDASN.OUT') +
*  ALTDATE(2023-06-30) +
*  ALTTIME(09.43.36) +
*  CRDATE(2023-06-30) +
*  CRTIME(09.43.36) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OPTORO.TMP.TEST.OUT') +
*  ALTDATE(2023-12-07) +
*  ALTTIME(04.50.13) +
*  CRDATE(2023-06-26) +
*  CRTIME(09.25.57) +
   DISTL(NO) +
   MAXDEPTH(20000) +
   REPLACE
DEFINE QLOCAL('ORDER.OMSOUTPUT.TESTQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('PMC.GSI.PDL.EU.MANUAL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.AEM.DAM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ACE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.A.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MONQ(LOW) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('POC.TMP.ND.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.FACEBOOK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.FACEBOOK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.FACEBOOK.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.GOOGLE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.GOOGLE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.GOOGLE.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.39) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.39) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.SNAP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.SNAP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.SNAP.EU.INDEX') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.SNAP.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.SNAP.NA.INDEX') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RL.MARKETINGFEEDS.TEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MATMAS05.PMC.SAP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MATMAS05.PMC.SAP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MATMAS05.PMC.SAP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MATMAS05.PMC.SAP.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MATMAS05.REPROCESS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.MATMAS05.REPROCESS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.PMC.IIB.MATERIAL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.PMC.REPROCESS.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.ASN.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.CREMAS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.CREMAS05.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ASN.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.CREMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.CREMAS05.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.CREMAS05.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.MATMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.MATMAS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.MATMAS05.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.MATMAS05.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.MATMAS05.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.ORDERS05.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.40) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.SAP.EVRYTHNG.SSB.TEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RL.TEST.Q') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(1000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.AFTERSHIP.CREATEORDER.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.D365.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.D365.FINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.D365.FINPOST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.D365.FINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.MULTISYS.FINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.SFCC.RTAM.DEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.SFCC.RTAM.DEL.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.SFCC.RTAM.DEL.TEMPIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.SFCC.RTAM.DEL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.ZETA.ORDERNOTIFY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS.ZETA.ORDERNOTIFY.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.OMS2ZETA.EMAIL.NOTIFICATION.TEMP.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.MULTI.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.MULTISYS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.MULTISYS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.MULTISYS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLAPAC.SFCC.OMS.ORDERCREATE.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.ESB.FILEINERRORPROCESSING.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
*  CURDEPTH(20) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.ESB.SENDMAIL.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.ESB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.DATASTORE') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.19.59) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.19.59) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.DATASTORE.LOG') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.21.28) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.21.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.ERROR') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.13.34) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.13.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.ERROR.DETAILS') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.13.54) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.13.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.INBOUNDASN.TRIGGER') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.20.35) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.20.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.PICKTICKET.DATASTORE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.PICKTICKET.DATASTORE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.PICKTICKET.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.PICKTICKET.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.PICKTICKET.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.RETURNASN.DATASTORE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.RETURNASN.DATASTORE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.RETURNASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.41) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.41) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.RETURNASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.IIB.PKMS.RETURNASN.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.CM.CTL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.CM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.CM.XB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.RLE.CTL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.RLE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.RLE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.PICKTICKET.RLE.XB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.I8.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.I9.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.CM.XB.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.I8.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.I9.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.TRIGGER.DUP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.OMS.IIB.RETURNASN.RLE.XB.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.INTER.DATA') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.PIX.TRIGGER.DUP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.CM.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.CM.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.CM.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.CM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.CM.XB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.XB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLE.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLE.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLE.XB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.42) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.RLS.XB.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RLM.PKMS.IIB.SHIPCONFIRM.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PMC.BI.PDL.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PMC.BI.PDL.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PMC.BI.PDL.EU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.PMC.BI.PDL.EU.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.12.30) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.12.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR.DETAILS') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.13.16) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.13.16) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.INBOUNDASN.RLE.TRIGGER') +
*  ALTDATE(2023-08-03) +
*  ALTTIME(08.17.28) +
*  CRDATE(2023-08-03) +
*  CRTIME(08.17.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.PICKTICKET.RLS.I1.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.PICKTICKET.RLS.I2.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.PICKTICKET.RLS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.PICKTICKET.RLS.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.RETURNASN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.RETURNASN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.RETURNASN.I8.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.RETURNASN.I9.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.RETURNASN.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.IIB.RETURNASN.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RLM.SAP.PMC.PICKTICKET.MANUAL.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.DTA.EU.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.DTA.NAPFS.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.DTA.NARLS.OUT') +
*  ALTDATE(2023-07-06) +
*  ALTTIME(05.08.38) +
*  CRDATE(2023-07-06) +
*  CRTIME(05.08.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.NAPFS.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.NAPFS.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.POSLOG.EU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.POSLOG.EU.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.POSLOG.NAPFS.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL.XCENTRE.IP.POSLOG.NAPFS.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.ALOHA.IP.ALOHAFINPOST.IN') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(04.25.50) +
*  CRDATE(2023-04-26) +
*  CRTIME(04.25.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.ALOHA.IP.ALOHAFINPOST.INTER') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(04.26.18) +
*  CRDATE(2023-04-26) +
*  CRTIME(04.26.18) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.ALOHA.IP.ALOHAFINPOST.TRIGGER') +
*  ALTDATE(2023-04-26) +
*  ALTTIME(04.26.50) +
*  CRDATE(2023-04-26) +
*  CRTIME(04.26.50) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.SQR.SQRINV.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.SQR.SQRINV.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.SQR.SQRINV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.SQR.SQRINVUK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONACK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONACK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONACK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONACK.RESPONSE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONTRANSFER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONXFER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.43) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONXFER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONXFER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONXFER.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.IP.TYCO.CARTONXFER.RESPONSE.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISREAN13.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISREAN13.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISREAN13.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISREMPLOY.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISREMPLOY.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISREMPLOY.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRINVDEL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRINVDEL.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRINVDEL.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRINVDEL.IN.OUTS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSAL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSAL.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSAL.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSALSPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSALSPL.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSALSPL.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIV.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIV.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIV.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIVCCH.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIVSPL.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(2) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIVSPL.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.RPL.ISRSIVSPL.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.RFIDSALESRP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.RFIDSALESRP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.RFIDSALESRP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.TVCRFIDSALESRP.ERROR') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(12.56.25) +
*  CRDATE(2023-05-03) +
*  CRTIME(12.56.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.TVCRFIDSALESRP.ERROR.DETAILS') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(12.56.09) +
*  CRDATE(2023-05-03) +
*  CRTIME(12.56.09) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.TVCRFIDSALESRP.IN') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(12.48.08) +
*  CRDATE(2023-05-03) +
*  CRTIME(12.48.08) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.MICROS.TYCO.TVCRFIDSALESRP.OUT.LOG') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(12.48.35) +
*  CRDATE(2023-05-03) +
*  CRTIME(12.48.35) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.RN.BI.RTLNXTTRAFFIC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.RN.BI.RTLNXTTRAFFIC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.RN.BI.RTLNXTTRAFFIC.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SAP.TEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.TJSON') +
*  ALTDATE(2023-05-31) +
*  ALTTIME(08.48.47) +
*  CRDATE(2023-04-27) +
*  CRTIME(05.55.01) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOST.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTFR.ERROR') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(03.41.12) +
*  CRDATE(2023-10-03) +
*  CRTIME(03.41.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTFR.ERROR.DETAILS') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(03.40.49) +
*  CRDATE(2023-10-03) +
*  CRTIME(03.40.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTFR.IN') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(03.38.31) +
*  CRDATE(2023-10-03) +
*  CRTIME(03.38.31) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTFR.INTER') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(03.38.09) +
*  CRDATE(2023-10-03) +
*  CRTIME(03.38.09) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTFR.TRIGGER') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(03.37.36) +
*  CRDATE(2023-10-03) +
*  CRTIME(03.37.36) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTUK.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTUK.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTUK.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTUK.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.44) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTUK.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.IP.SQRFINPOSTUK.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMER.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMER.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMER.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMER.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.SQR.RLT.SQRCUSTOMERUK.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.TMP.ND.IIB.IMP.HMPURORDCNF.IN') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(01.49.04) +
*  CRDATE(2023-05-03) +
*  CRTIME(01.49.04) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.TMP.ND.IIB.IMP.HMPURORDCNF.IN.LOG') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(01.49.28) +
*  CRDATE(2023-05-03) +
*  CRTIME(01.49.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.TT.RLT.TTNOTIFR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.TT.RLT.TTNOTIFR.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.IN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.IN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.RESP.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.VBS.RLT.RTCUSTDT.RESP.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.ERROR') +
*  ALTDATE(2023-10-09) +
*  ALTTIME(07.43.19) +
*  CRDATE(2023-10-09) +
*  CRTIME(07.43.19) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.ERROR.DETAILS') +
*  ALTDATE(2023-10-09) +
*  ALTTIME(07.43.40) +
*  CRDATE(2023-10-09) +
*  CRTIME(07.43.40) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.IN') +
*  ALTDATE(2023-10-06) +
*  ALTTIME(05.58.59) +
*  CRDATE(2023-10-06) +
*  CRTIME(05.58.59) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.OUT.LOG') +
*  ALTDATE(2023-10-06) +
*  ALTTIME(05.59.55) +
*  CRDATE(2023-10-06) +
*  CRTIME(05.59.17) +
*  CURDEPTH(626) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.MICROS.IP.POSLOG.EU.COL.TRIGGER') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(06.08.40) +
*  CRDATE(2023-07-13) +
*  CRTIME(06.08.40) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.MICROS.IP.POSLOG.EU.ERROR') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(06.08.20) +
*  CRDATE(2023-07-13) +
*  CRTIME(06.08.20) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.MICROS.IP.POSLOG.EU.ERROR.DETAILS') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(06.08.03) +
*  CRDATE(2023-07-13) +
*  CRTIME(06.08.03) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.MICROS.IP.POSLOG.EU.IN') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(06.07.12) +
*  CRDATE(2023-07-13) +
*  CRTIME(06.07.12) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.MICROS.IP.POSLOG.EU.IN.LOG') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(06.07.42) +
*  CRDATE(2023-07-13) +
*  CRTIME(06.07.42) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.MICROS.IP.POSLOG.EU.REPRO.COL.TRIGGER') +
*  ALTDATE(2023-07-13) +
*  ALTTIME(06.10.11) +
*  CRDATE(2023-07-13) +
*  CRTIME(06.10.11) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.TT.RLT.TTNOTIFR.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('RTL2.TT.RLT.TTNOTIFR.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAMPLE.ZETA') +
*  ALTDATE(2023-12-06) +
*  ALTTIME(08.43.27) +
*  CRDATE(2023-12-06) +
*  CRTIME(08.43.27) +
*  CURDEPTH(28) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
*  CURDEPTH(1) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.INTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.SAP.ARIBA.REQUI.EU.INTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAP.TMP.ND.WD.SAP.DATA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPIMPACT.INVENTORYFEED.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.INVOICEPDF.SFDC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.INVOICEPDF.SFDC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.INVOICEPDF_TO_SFDC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.INVOICEPDF_TO_SFDC.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.INVOICEPDF_TO_SFDC.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.INVOICEPDF_TO_SFDC_DATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.PACKAGING_SLIP_TO_SFDC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.PACKAGING_SLIP_TO_SFDC.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.PACKAGING_SLIP_TO_SFDC.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.PACKINGSLIP.SFDC.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.PACKINGSLIP.SFDC.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.45) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.45) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.PACKING_SLIP_TO_SFDC_DATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCN.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(83886080) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCN.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCN.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(83886080) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCN.INTERMEDIATE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCN.SPLITTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCN.SPLITTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCH.AEAA.ASSOCNDATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(83886080) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHCUSTOMERMASTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHCUSTOMERMASTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHCUSTOMERMASTER.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHCUSTOMERMASTERDATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHORDERHISTORY.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHORDERHISTORY.ERRORDETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHORDERHISTORY.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHORDERHISTORY.INTERMEDIATE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHORDERHISTORY.SPLITTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHORDERHISTORY.SPLITTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHPRICING.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHPRODUCTMASTER.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHPRODUCTMASTER.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHPRODUCTMASTER.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHPRODUCTMASTERDATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHRONIZE.PRICE.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHRONIZE.PRICEDATA.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHRONIZEPRICE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SAPPI.SYNCHRONIZEPRICE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SFDC.CREATEB2BORDER.SAPPI.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SFDC.CREATEB2BORDER.SAPPI.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SFDC.CREATEB2BORDER.SAPPI.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MONQ(MEDIUM) +
   REPLACE
DEFINE QLOCAL('SFDC.CREATEB2BORDER.SAPPI.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.INPUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.LOG1') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.FACTORY.BENF.LOG2') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SRM.PROVIDER.PARTNER.JSON.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('SSB.TESTOUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.46) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Administration Accounting Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Administration Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CHANNEL.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Related Event Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Command Event Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
*  OPPROCS(6) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CONFIG.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Configuration Event Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.LOGGER.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Logger Event Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PERFM.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Performance Related Event Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PUBSUB.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Publish/Subscribe Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.QMGR.EVENT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Queue Manager Related Event Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Administration Statistics Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Administration Trace Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Administration Trace Route Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AMQP.COMMAND.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.52) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AUTH.DATA.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
*  CURDEPTH(1951) +
   DESCR('IBM MQ Authority Data Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.STREAM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('Admin stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONTROL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('Control queue for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEFAULT.STREAM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('Default stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.57) +
   DEFPSIST(YES) +
   DESCR('MQSeries Publish/Subscribe internal reply queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.INITQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Initiation Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(2000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.SYNCQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.46) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
*  CURDEPTH(5) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Channel Sync Queue') +
   DISTL(NO) +
   MAXDEPTH(20000) +
   MAXMSGL(20000) +
   QDEPTHLO(40) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHLAUTH.DATA.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
*  CURDEPTH(20) +
   DESCR('IBM MQ Channel Authentication Data Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CICS.INITIATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DESCR('IBM MQ Default CICS Initiation queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.COMMAND.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Cluster Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.HISTORY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Cluster History Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
*  CURDEPTH(303) +
   DESCR('IBM MQ Cluster Repository Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QMODEL('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFTYPE(PERMDYN) +
   DESCR('IBM MQ Cluster Transmission Model Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Cluster Transmission Queue') +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(999999999) +
   TRIGGER +
*  OPPROCS(3) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DDELAY.LOCAL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.52) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Delivery Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEAD.LETTER.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DESCR('IBM MQ Default Dead Letter Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QALIAS('SYSTEM.DEFAULT.ALIAS.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.INITIATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DESCR('IBM MQ Default Initiation Queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.LOCAL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QREMOTE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('IBM MQ .NET XA Recovery Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.DURABLE.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFTYPE(PERMDYN) +
   DESCR('Model for managed queues for durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
*  CURDEPTH(1) +
   DESCR('Store of information about durable subscribers') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.HIERARCHY.STATE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub hierarchy relationship') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.CONTROL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Control Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.FANREQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub proxy-sub request queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.PUBS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Publications') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REPLY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Internal Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REQUEST.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.52) +
   DESCR('IBM MQ Internal Request Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.TEMPQ.MODEL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for JMS temporary queues') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DESCR('IBM MQ Message Association Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQEXPLORER.REPLY.MODEL') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQSC.REPLY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.50) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('IBM MQ MQSC Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QMODEL('SYSTEM.NDURABLE.MODEL.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFREADA(YES) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for managed queues for non durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PENDING.DATA.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Message Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.ERROR.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Error Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.POLICY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.52) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Policy Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.REST.REPLY.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.52) +
   DESCR('IBM MQ REST Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   QDPMAXEV(DISABLED) +
   REPLACE
DEFINE QLOCAL('SYSTEM.RETAINED.PUB.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
*  CURDEPTH(1900) +
   DESCR('Store of retained publications') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.EVALUATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Selection Evaluation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.VALIDATION.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(00.52.51) +
   DESCR('IBM MQ Selection Validation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('TEST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ACE.BI.SNOWFLAKE.IN') +
*  ALTDATE(2023-09-20) +
*  ALTTIME(06.50.10) +
*  CRDATE(2023-09-20) +
*  CRTIME(06.50.10) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ACE.BI.SNOWFLAKE.OUT') +
*  ALTDATE(2023-09-20) +
*  ALTTIME(06.49.30) +
*  CRDATE(2023-09-20) +
*  CRTIME(06.49.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.CLUS') +
*  ALTDATE(2023-10-03) +
*  ALTTIME(02.21.19) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-10-03) +
*  CRTIME(02.20.56) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.COLOR.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.COLOR.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.D365') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ERROR') +
*  ALTDATE(2023-11-16) +
*  ALTTIME(04.51.47) +
*  CRDATE(2023-11-16) +
*  CRTIME(04.51.47) +
*  CURDEPTH(9) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ERROR.DETAILS') +
*  ALTDATE(2023-11-16) +
*  ALTTIME(04.52.23) +
*  CRDATE(2023-11-16) +
*  CRTIME(04.52.23) +
*  CURDEPTH(9) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ERROR1') +
*  ALTDATE(2023-11-16) +
*  ALTTIME(05.47.30) +
*  CRDATE(2023-11-16) +
*  CRTIME(05.47.30) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.ERROR1.DETAILS') +
*  ALTDATE(2023-11-16) +
*  ALTTIME(05.47.50) +
*  CRDATE(2023-11-16) +
*  CRTIME(05.47.50) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.EXPRY') +
*  ALTDATE(2023-06-20) +
*  ALTTIME(17.30.16) +
*  CRDATE(2023-06-20) +
*  CRTIME(17.20.23) +
   CUSTOM('CAPEXPRY(1)') +
   DISTL(NO) +
   MAXDEPTH(2500000) +
   REPLACE
DEFINE QLOCAL('TEST.GTM') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
   CLUSTER('MQCLUS_DEV') +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.HOME') +
*  ALTDATE(2023-05-03) +
*  ALTTIME(01.50.23) +
*  CRDATE(2023-05-03) +
*  CRTIME(01.50.23) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.IN.SSB') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.INTER') +
*  ALTDATE(2023-06-12) +
*  ALTTIME(09.18.01) +
*  CRDATE(2023-04-18) +
*  CRTIME(06.24.27) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('TEST.MON.DATAFEED.IN.TMP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.NGC.JSON.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.OMS.AV') +
*  ALTDATE(2023-07-19) +
*  ALTTIME(07.22.18) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('TEST.OMS.Give.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
*  CURDEPTH(7) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.OUT.SSB') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.PRODUCT.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.PRODUCT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.QUEUE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.GFE.EMEA.CSV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.GFE.NA.CSV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.EMEA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.EMEA.INTER.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.EMEA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.EMEA.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.NA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.NA.INTER.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.NA.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.CSV.NA.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.JSON.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.JSON.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.REBATCH.EMEA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.ASSET.REBATCH.NA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.CSV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.CSV.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.47) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.47) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.EMEA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.EMEA.INTER.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.JSON.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.JSON.LOG.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.NA.CSV.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.NA.CSV.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.NA.INTER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.NA.INTER.OUT.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.REBATCH.EMEA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RS.NO.REBATCH.NA.TRIGGER') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RTL1.TT.RLT.APPTDT.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.RTL1.TT.RLT.APPTDT.IN.LOG') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.SAP') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.SAP.AV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.SSB.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.TMP.AV') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST.TRIGGER') +
*  ALTDATE(2023-06-06) +
*  ALTTIME(07.03.33) +
*  CRDATE(2023-06-06) +
*  CRTIME(07.03.33) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.TYCO.RFID') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.XSTORE.EMP.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.XSTORE.MNT.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST.XSTORE_MNT_OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(16777216) +
   REPLACE
DEFINE QLOCAL('TEST.XSTORE_PLU_IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(12582912) +
   REPLACE
DEFINE QLOCAL('TESTING_PAYLOAD') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TESTNEW') +
*  ALTDATE(2023-05-22) +
*  ALTTIME(12.37.20) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TESTQ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(10) +
   MONQ(MEDIUM) +
   REPLACE
DEFINE QLOCAL('TEST_IN') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(14.19.47) +
*  CRDATE(2023-07-11) +
*  CRTIME(11.02.54) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(500000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('TEST_IN_1') +
*  ALTDATE(2023-07-20) +
*  ALTTIME(10.06.08) +
*  CRDATE(2023-07-20) +
*  CRTIME(10.06.08) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('TEST_JSON') +
*  ALTDATE(2023-05-29) +
*  ALTTIME(06.50.51) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
*  CURDEPTH(3) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST_JSON_OUT') +
*  ALTDATE(2023-05-29) +
*  ALTTIME(06.50.34) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(50000) +
   REPLACE
DEFINE QLOCAL('TEST_OUT') +
*  ALTDATE(2023-07-28) +
*  ALTTIME(09.38.48) +
*  CRDATE(2023-07-11) +
*  CRTIME(11.03.12) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(600000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('TEST_OUT_1') +
*  ALTDATE(2023-07-26) +
*  ALTTIME(14.20.21) +
*  CRDATE(2023-07-20) +
*  CRTIME(10.06.30) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('TEST_OUT_INTER') +
*  ALTDATE(2023-07-27) +
*  ALTTIME(14.34.28) +
*  CRDATE(2023-07-27) +
*  CRTIME(14.33.40) +
   DISTL(NO) +
   MAXDEPTH(500000) +
   MAXMSGL(104857599) +
   REPLACE
DEFINE QLOCAL('TEST_XMLNSC') +
*  ALTDATE(2024-02-29) +
*  ALTTIME(23.49.11) +
*  CRDATE(2024-02-29) +
*  CRTIME(23.49.11) +
*  CURDEPTH(2) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TEST_XMLNSC1') +
*  ALTDATE(2024-02-29) +
*  ALTTIME(23.49.34) +
*  CRDATE(2024-02-29) +
*  CRTIME(23.49.34) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TRIGGER.COLOR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('TRIGGER.PRODUCT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('V') +
*  ALTDATE(2023-10-18) +
*  ALTTIME(05.30.28) +
*  CRDATE(2023-10-18) +
*  CRTIME(05.30.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Vendor_DP_JSON.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('Vendor_DP_JSON.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('WKDAY.IIB.SAP.EMPPROJ.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('WKDAY.IIB.SAP.EMPPROJ.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('WKDAY.IIB.SAP.EMPPROJ.IN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('WKDAY.IIB.SAP.EMPPROJ.OUT') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('XMLNSCCode') +
*  ALTDATE(2024-01-22) +
*  ALTTIME(01.18.37) +
*  CRDATE(2024-01-22) +
*  CRTIME(01.18.37) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('XMLNSCOut') +
*  ALTDATE(2024-01-22) +
*  ALTTIME(01.19.22) +
*  CRDATE(2024-01-22) +
*  CRTIME(01.19.22) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('XSTORE.ERROR') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('XSTORE.ERROR.DETAILS') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
*  CRDATE(2023-02-25) +
*  CRTIME(01.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('rl.PublishUpdateToNarvarForterBI.Q') +
*  ALTDATE(2023-08-30) +
*  ALTTIME(10.50.14) +
*  CRDATE(2023-08-30) +
*  CRTIME(10.50.14) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE NAMELIST('SYSTEM.DEFAULT.NAMELIST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
*  NAMCOUNT(2) +
   NAMES('SYSTEM.BROKER.DEFAULT.STREAM' +
        ,'SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('A list of queues for the queued Pub/Sub interface to monitor') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
*  NAMCOUNT(1) +
   NAMES('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   DESCR('Topic objects list used to match to RFH2 subscription points') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
   REPLACE
DEFINE PROCESS('SYSTEM.DEFAULT.PROCESS') +
   APPLTYPE(UNIX) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
   REPLACE
DEFINE CHANNEL('ACE11.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.48) +
   DESCR('ACE11 Server Connection Test') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('Admin channel') +
   MCAUSER('mqm') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('DEVOPS.IIBA1HD01') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('EDAM.DAM.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('EDAM integration - DAM application channel') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('EDAM.PAM.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('EDAM integration - PAM application channel') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ERP.HTR.HUB1') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('SAP-HTR Server connection channel') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ERP.HTR.HUB2') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('SAP-HTR Server connection channel') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('GFE.ADMN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MCAUSER('xmftd1mq') +
   SHARECNV(1) +
   SSLCAUTH(OPTIONAL) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIB10.DEV.CLNTCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MAXMSGL(83886080) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MFT.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MAXMSGL(104857600) +
   MCAUSER('xmftd1pb') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('OMS.DEV.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('POLO.CTRLM.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MAXMSGL(104857600) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('RL.TEST.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('Server Connection Channel for RL TEST') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('RLAD1DBH.DEV1') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('Server-connection channel to RLAQ1MQS for JDA project') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('RRF.ITIM.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('ITIM Server connection channel') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MAXMSGL(83886080) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('Auto-defined by') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.AMQP') +
   CHLTYPE(AMQP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   PORT(5672) +
   TPROOT('SYSTEM.BASE.TOPIC') +
   TMPMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
   TMPQPRFX('AMQP.*') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSRCVR') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSSDR') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.REQUESTER') +
   CHLTYPE(RQSTR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SENDER') +
   CHLTYPE(SDR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SERVER') +
   CHLTYPE(SVR) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.USER.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TIVOLI.MON.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TIVOLI.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   DESCR('for monitoring through tivoli') +
   MCAUSER('xmftd1pb') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TO.IIBA1HD01') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2023-02-27) +
*  ALTTIME(06.29.52) +
   CLUSTER('MQCLUS_DEV') +
   CONNAME('iiba1hd01.poloralphlauren.com(3020)') +
   MAXMSGL(104857600) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TO.REPA1HD01') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2023-02-27) +
*  ALTTIME(06.54.19) +
   CLUSTER('MQCLUS_DEV') +
   CONNAME('repa1hd01.poloralphlauren.com(3010)') +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('IIB10.DEV.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   CONNAME('iiba1hd01.poloralphlauren.com(3020)') +
   DESCR('Client-connection to for Integration Node') +
   MAXMSGL(83886080) +
   QMNAME('IIBA1QM01') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TIVOLI.MON.SVRCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   CONNAME('iiba1hd01.poloralphlauren.com(3020)') +
   QMNAME('IIBA1HD01') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   AUTHTYPE(IDPWLDAP) +
   ADOPTCTX(YES) +
   CONNAME(' ') +
   CHCKCLNT(REQUIRED) +
   SHORTUSR(' ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   AUTHTYPE(IDPWOS) +
   ADOPTCTX(YES) +
   CHCKCLNT(NONE) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   AUTHTYPE(OCSP) +
   OCSPURL(' ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   AUTHTYPE(CRLLDAP) +
   CONNAME(' ') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE LISTENER('DEVOPS.LISTENER.TCP.1') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(1320) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE LISTENER('SYSTEM.DEFAULT.LISTENER.TCP') +
   TRPTYPE(TCP) +
   CONTROL(MANUAL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE LISTENER('SYSTEM.LISTENER.TCP.1') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(3020) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE LISTENER('SYSTEM.LISTENER.TCP.3') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(3020) +
   DESCR('DEVOPS TESTING') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE SERVICE('SYSTEM.AMQP.SERVICE') +
   CONTROL(QMGR) +
   SERVTYPE(SERVER) +
   STARTCMD('+MQ_INSTALL_PATH+/bin/amqp.sh') +
   STARTARG('start -m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+/." -g "+MQ_DATA_PATH+/."') +
   STOPCMD('+MQ_INSTALL_PATH+/bin/endmqsde') +
   STOPARG('-m +QMNAME+ -n "+MQ_SERVICE_NAME+" -t AMQP') +
   STDOUT('+MQ_Q_MGR_DATA_PATH+/amqp.stdout') +
   STDERR('+MQ_Q_MGR_DATA_PATH+/amqp.stderr') +
   DESCR('Manages clients that use the AMQP protocol') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE SERVICE('SYSTEM.DEFAULT.SERVICE') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   GRPADDR('239.0.0.0') +
   PORT(1414) +
   REPLACE
DEFINE TOPIC('GTMTEST') +
   TOPICSTR('$SYS/Broker/+/Monitoring/#') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE TOPIC('SYSTEM.ADMIN.TOPIC') +
   TOPICSTR('$SYS/MQ') +
   DESCR('Root topic for MQ administrative topics') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(QMGR) +
   SUBSCOPE(QMGR) +
   WILDCARD(BLOCK) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BASE.TOPIC') +
   TOPICSTR('') +
   DESCR('Base topic for resolving attributes') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.ADMIN.STREAM') +
   TOPICSTR('SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('Admin stream for queued Pub/Sub interface') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.STREAM') +
   TOPICSTR('') +
   DESCR('Default stream for queued Pub/Sub interface') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   TOPICSTR('') +
   DESCR('Default RFH2 subscription point for queued Pub/Sub interface') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.DEFAULT.TOPIC') +
   TOPICSTR('') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE TOPIC('SYSTEMS.DEFAULT.TOPIC') +
   TOPICSTR('devopstest') +
   DESCR('TESTING') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   REPLACE
DEFINE SUB('GTM_SUB_DV_GFE') +
   TOPICSTR('$SYS/Broker/+/Monitoring/ISDV_GFE/#') +
*  DISTYPE(DEFINED) +
   DEST('GTM.ACE.LOG') +
   DESTQMGR('IIBA1HD01') +
*  SUBTYPE(ADMIN) +
   SUBUSER('xmftd1pb') +
*  CRDATE(2023-06-14) +
*  CRTIME(02:17:47) +
*  ALTDATE(2023-06-14) +
*  ALTTIME(02:17:47) +
   REPLACE
DEFINE SUB('GTM_SUB_DV_OPTORO') +
   TOPICSTR('$SYS/Broker/+/Monitoring/ISDV_OPTORO/#') +
*  DISTYPE(DEFINED) +
   DEST('GTM.ACE.LOG') +
   DESTQMGR('IIBA1HD01') +
*  SUBTYPE(ADMIN) +
   SUBUSER('xmftd1pb') +
*  CRDATE(2023-06-21) +
*  CRTIME(06:23:02) +
*  ALTDATE(2023-06-21) +
*  ALTTIME(06:36:54) +
   REPLACE
DEFINE SUB('SYSTEM.DEFAULT.SUB') +
   TOPICSTR('') +
*  DISTYPE(DEFINED) +
*  SUBTYPE(ADMIN) +
*  CRDATE( ) +
*  CRTIME( ) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01:52:49) +
   REPLACE
DEFINE SUB('GTM_SUB_DV_TEST11') +
   TOPICSTR('$SYS/Broker/+/Monitoring/IS_TEST11/#') +
*  DISTYPE(DEFINED) +
   DEST('GTM.ACE.LOG') +
   DESTQMGR('IIBA1HD01') +
*  SUBTYPE(ADMIN) +
   SUBUSER('xmftd1pb') +
*  CRDATE(2023-07-13) +
*  CRTIME(07:49:16) +
*  ALTDATE(2023-07-13) +
*  ALTTIME(07:49:16) +
   REPLACE
SET CHLAUTH('ACE11.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('aceuser dock') +
   ADDRESS('*.*.*.*') +
   MCAUSER('aceuser') +
   USERSRC(MAP) +
   CHCKCLNT(REQDADM) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ACE11.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.220.235') +
   USERSRC(CHANNEL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('DEVOPS.IIBA1HD01') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.203.10.69') +
   MCAUSER('azureadmin') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('DEVOPS.IIBA1HD01') +
   TYPE(BLOCKUSER) +
   USERLIST('NOBODY') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('EDAM.DAM.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('edam account') +
   ADDRESS('10.98.43.*') +
   MCAUSER('app-edam') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('EDAM.DAM.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('EDAM.PAM.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('edam account') +
   ADDRESS('10.98.43.*') +
   MCAUSER('app-edam') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('EDAM.PAM.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('edam account') +
   ADDRESS('10.98.58.*') +
   MCAUSER('app-edam') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('EDAM.PAM.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ERP.HTR.HUB1') +
   TYPE(ADDRESSMAP) +
   DESCR('snow account') +
   ADDRESS('10.*.*.*') +
   MCAUSER('app-snow') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ERP.HTR.HUB1') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ERP.HTR.HUB2') +
   TYPE(ADDRESSMAP) +
   DESCR('snow account') +
   ADDRESS('10.*.*.*') +
   MCAUSER('app-snow') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('ERP.HTR.HUB2') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('IIB10.DEV.CLNTCONN') +
   TYPE(USERMAP) +
   DESCR('ace user') +
   ADDRESS('*.*.*.*') +
   CLNTUSER('aceuser') +
   MCAUSER('aceuser') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('IIB10.DEV.CLNTCONN') +
   TYPE(USERMAP) +
   DESCR('Allow iibadm admin') +
   ADDRESS('*.*.*.*') +
   CLNTUSER('iibadm') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('IIB10.DEV.CLNTCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('MFT.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Allow xmftd1pb admin') +
   ADDRESS('*.*.*.*') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('MFT.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('OMS.DEV.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.65.*.*') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('OMS.DEV.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.217.63') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('OMS.DEV.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.219.*') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('OMS.DEV.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.220.*') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('OMS.DEV.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Connect to MQ Explorer & Rfhutil') +
   ADDRESS('10.98.*.*') +
   MCAUSER('iibadm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('OMS.DEV.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('*whatever') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('POLO.CTRLM.SVRCONN') +
   TYPE(USERMAP) +
   DESCR('Allow xmftd1pb mq admin as mqm on local subnet') +
   ADDRESS('*.*.*.*') +
   CLNTUSER('xmftd1pb') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('POLO.CTRLM.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('MFT Agent') +
   ADDRESS('*.*.*.*') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('POLO.CTRLM.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RL.TEST.SVRCONN') +
   TYPE(USERMAP) +
   DESCR('Allow mqm mq admin as mqm on local subnet') +
   ADDRESS('*.*.*.*') +
   CLNTUSER('mqm') +
   MCAUSER('mqm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RL.TEST.SVRCONN') +
   TYPE(USERMAP) +
   DESCR('Allow mqm mq admin as mqm on local subnet') +
   ADDRESS('*.*.*.*') +
   CLNTUSER('ndreyer') +
   MCAUSER('mqm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RL.TEST.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('rfhutil Service') +
   ADDRESS('*.*.*.*') +
   MCAUSER('mqm') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RL.TEST.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override mqm blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RLAD1DBH.DEV1') +
   TYPE(ADDRESSMAP) +
   DESCR('JDA Account connectivity') +
   ADDRESS('10.98.35.*') +
   MCAUSER('app-jdaq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RLAD1DBH.DEV1') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RRF.ITIM.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('snow account') +
   ADDRESS('10.*.*.*') +
   MCAUSER('app-snow') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('RRF.ITIM.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Rule to override *MQADMIN blockuser on this channel') +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.217.16') +
   MCAUSER('xmftd1mq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.217.57') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.217.201') +
   MCAUSER('xmftd1mq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.218.21') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.218.27') +
   MCAUSER('xmftd1mq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.219.67') +
   MCAUSER('xmftq1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.220.31') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.220.65') +
   MCAUSER('xmftq1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.220.97') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.229.33') +
   MCAUSER('xmftd1mq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.229.51') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.229.65') +
   MCAUSER('xmftd1mq') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.229.88') +
   MCAUSER('xmftq1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.229.107') +
   MCAUSER('xmftq1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.*.*') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('monitoring') +
   ADDRESS('10.202.51.22') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('US-W7V-PSaxena1') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('us-w7v-athakur') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow MQ Explorer access') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('*whatever') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.USER.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
   CHCKCLNT(REQUIRED) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.USER.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('*whatever') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.MON.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('monitoring') +
   ADDRESS('10.98.22.232') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.MON.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('monitoring') +
   ADDRESS('10.98.43.252') +
   MCAUSER('xmftd1pb') +
   USERSRC(MAP) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.MON.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('*whatever') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.SVRCONN') +
   TYPE(ADDRESSMAP) +
   ADDRESS('10.98.22.232') +
   USERSRC(CHANNEL) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('TIVOLI.SVRCONN') +
   TYPE(BLOCKUSER) +
   USERLIST('nobody') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.*') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to disable all SYSTEM channels') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(BLOCKUSER) +
   DESCR('Default rule to disallow privileged users') +
   USERLIST('*MQADMIN') +
*  ALTDATE(2023-02-25) +
*  ALTTIME(01.52.49) +
   ACTION(REPLACE)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZRD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.EXPRY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRUNITCST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ORDER.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVDELTA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.REPORD.PK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING5.QUEUE') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING5.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.PRC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.ALOHA.IP.ALOHAFINPOST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.ALOHA.IP.ALOHAFINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OM_QMGR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDERSTATUS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.CSR.ORDERNOTIFY.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.NA.CSV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHRONIZEPRICE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD023.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MPA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IIB.ORDEREVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHPRICING.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.RMA.DETAILS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.ORDERACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.AWS.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CUSTOMERNUMBERCOUNT.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CUSTOMERNUMBERCOUNT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SSHEET.SHIPUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GCD_RL_FB_ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.MATMAS05.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.MATMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.FOE.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWBD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.DAM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.RMA.DETAILS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.GFE.NUO.NOBASCURPR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.CANCELRETURN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.ORDERUPDATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AAPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XMLNSCCode') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XMLNSCCode') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.UPS.ZETA.STOREHRS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMER.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SFDC.CREATEB2BORDER.SAPPI.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.SNAP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.MATMAS05.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPHOLDORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.PRC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCN.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.MADMB.ORDUPDATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.SFCC.RTAM.DEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TIVOLI.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIVCCH.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TEST.RS.GFE.NA.CSV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZRD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDCREDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.TT.RLT.TTNOTIFR.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.CLUS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.CLUS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.GFE.EMEA.CSV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MAT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.NOCOR.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.PB.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.REBATCH.EMEA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.NA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.PRODUCT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.CMS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TO.REPA1HD01') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.IIB.ROUTING.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.ALOHA.IP.ALOHAFINPOST.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.ALOHA.IP.ALOHAFINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IA.OMS.DEMALLOC.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IA.OMS.DEMALLOC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.CONTROL.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.CONTROL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.RETURNSHIPMT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.CSR.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWBD.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BLUJ.PO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EMBTRAK.DESIGN_TO_SFDC.DATAERRORS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONF.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XSTORE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IMAGE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.PACKINGSLIP.SFDC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPMNGDSTRULE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHORDERHISTORY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BZ.RTAM.EOD.HK.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('EDAM.DAM.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.OUTP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.UPDATECUST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFRLS.TRIGGER.DUP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFRLS.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_IN_1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_IN_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.PICKTICKET.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.SFCC.RTAM.DEL.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTUK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVDAILY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.CSV.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SEASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ND.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.COLOR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.BI.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.MADMB.ORDUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ACE.LOGQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.DTA.NAPFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.OUT.TMP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.FOE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AAPD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.FORTER.DUMMY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSALSPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDCREDUP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PMC.BI.PDL.EU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.PRC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHORDERHISTORY.SPLITTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RMA.PUBLISH.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.DAM.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.RPA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.PMC.OMS.ITEMFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.ESB.FILEINERRORPROCESSING.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.EMEA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.FACTORY.BENF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('TEST.XSTORE_PLU_IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.COREATT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.TT.RLT.TTNOTIFR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVDAILY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.DATASTORE.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.DATASTORE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.PACKAGING_SLIP_TO_SFDC.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIVSPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.PLACEHOLDERMATMSTR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MONGODB.DAILY.DATA') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MONGODB.DAILY.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TESTQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ITEMMASTER.TEST.OUTPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.PRICEBOOK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.COLOR.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AUDIT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.ORDER.RELEASE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.IIB.OMS.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.IIB.OMS.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONXFER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.ADMN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.FULLINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.PRC.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DAINVDUP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SSHEET.SHIPUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOA.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOE.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MPA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PMC.GSI.PDL.EU.MANUAL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.GTM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISREMPLOY.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AUDIT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.OUT.TEST') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.OUT.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SSHEET.SHIPUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.D365.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TMP.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.INVOICEPDF_TO_SFDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.SEC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GCD.RL.FB.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.SHIPUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.CORP.ASS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.CREMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DAINVDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IIB.ORDEREVENT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.INTER.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.GFE.NUO.NOBASCURPR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.OMG.TO.MQ.LOG.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.RN.BI.RTLNXTTRAFFIC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING1.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.IN_DAM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.REPRO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.POSLOG.NAPFS.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.MATERIAL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Label2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Label1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.GFE.DADB.NOMATMSTR.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.IIB.RS.ROUTETORS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSMARGIN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.T.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.T.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHORDERHISTORY.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.CREATEORDER.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.CREATEORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.SHIPCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.RETURNASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQUEST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.AP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.RLE.XB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD039.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRINVDEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.NOCOR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OPP.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SSHEET.SHIPUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.MFT.COMMAND') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.MFT.COMMAND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBA1HD01.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TESTING_PAYLOAD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.PMC.OMS.ITEMFEED.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAMTEST') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAMTEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.AP.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.ADVTPROJ.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.ADVTPROJ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.FACEBOOK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSHIPMTSTS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT.RS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MATMAS05.PMC.SAP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.CMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.CODE.ORDERFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.AP.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.MULTISYS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AEM.SAP.DAILY.MATERIAL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.SQR.SQRINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.SHIPUPDATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.COL.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.COL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHORTSHIP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHORTSHIP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.CMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BZ.RTAM.EOD.HK.INTER.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BZ.RTAM.EOD.HK.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.RETURNASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAMTEST1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAMTEST1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.CMS.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.WFWMATERIAL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.OMS.AV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EMBTRAK.DESIGN.SFDC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPSCHDLORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.RFIDSALESRP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Label') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.PRC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.DELTAINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.RMA.DETAILS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.DELTAINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MAT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.CUSTM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.PRC.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.AFTERSHIP.CREATEORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHPRODUCTMASTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.SAP.OMS.DEMALLOC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.LGS.SHIPREQUEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.LGTY.TMPTBD046.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.XSTORE_MNT_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.XSTORE.MNT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVADJ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.IN_DAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.OMS.Give.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.ZETA.ORDERNOTIFY.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EMBTRAK.DESIGN.SFDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQA.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.BI.OMS.ITEMMSTR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.PICKTICKET.RLS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.FOE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.RETURNASN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('TEST_OUT_INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT_INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDNTFYDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.CUSTM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.EU.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING3.QUEUE') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING3.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.CREMAS05.LOG1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFLIQ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.IA.OMS.DEMALLOC.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.WFWPROJECTION.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.D365.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.MULTISYS.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.ESBERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.PRC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.D365.FINPOST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.CREMAS05.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.RETURNASN.DATASTORE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINANCIALPOSTDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINANCIALPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.CANCELRETURN.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.MULTISYS.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.O9.TMPTBD024COSB.TRIGGER_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.PLM.RM.SUPPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.ESB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFLIQ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IIB.ORDEVTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.CM.XB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.PACKING_SLIP_TO_SFDC_DATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.D365') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BKNG.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVDELTA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TESTNEW') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SSHEET.SHIPUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCN.SPLITTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.DCINVFULLKR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.TEST.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOSTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.COMMAND') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.COMMAND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.RETURN.CANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVDELTA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.DEL.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.UPDATECUST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TRIGGER.COLOR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSAL.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('RL.SAP.CREMAS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL_SAP_EVRYTHNG_ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.PROJ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.DAM.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEFAULT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.RMA.RECEIPT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TIVOLI.MON.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.PROJECTION.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.UPS.ZETA.STOREHRS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.CM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SAPPI.PACKAGING_SLIP_TO_SFDC.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MATMAS05.PMC.SAP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.EU.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.CANCELRETURN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.FOE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD047.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIV.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FORTER.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BKNG.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MFT.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.D365.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWBD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.I8.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.D365.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHORTSHIP.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHORTSHIP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATEOUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.T.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.T.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOPR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSVAT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.VATINVC.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.VATINVC.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWBD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHORTSHIP.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHORTSHIP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIB10.DEV.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FLINVDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCN.SPLITTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.CUSTM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTUK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GECANCEL.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GECANCEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.AE.RS.CSV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Vendor_DP_JSON.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.HUB2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.PROJ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.PO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FLINVDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.AWS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TRIGGER.PRODUCT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.CM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDNTFYDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS2ZETA.EMAIL.NOTIFICATION.TEMP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.XB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.BI.SUPPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.OUT.TMP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.PMC.OMS.ITEMFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.WFWPROJECTION.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOPR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOSTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.DAM.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDERNOTIFY.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.FORTER.SHIPUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZRD.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.RETURNASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PMC.BI.PDL.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.RETURNNTFCN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.SQR.SQRINVUK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INT.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OPP.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.ITIM.IMARKUP.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.RETURNASN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.TESTING') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.FOA.QA.OMG2MQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XMLNSCOut') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XMLNSCOut') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVFULL.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVFULL.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTV.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.POFNCTNLACK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SEASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCNDATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.DCINVFULLKR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TIVOLI.MON.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BKNG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.PLACEHOLDERBASECURPR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.GFE.NUO.NOBASCURPR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.REBATCH.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SSB.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ND.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.SFCC.RTAM.DEL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.SNAP.NA.INDEX') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.RETURNASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.FOE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IMAGE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.MON.DATAFEED.IN.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPDONUNMDRLS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.MATERIAL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.PAYLOAD') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.PAYLOAD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.PICKTICKET.DATASTORE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.SAP.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.MULTISYS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MPA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQ4.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.SDSTRINV.DEFAULT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TEST.IN.SSB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.DAM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMS.DEV.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('rl.PublishUpdateToNarvarForterBI.Q') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('rl.PublishUpdateToNarvarForterBI.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.LRD.RTVFEED.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.LRD.RTVFEED.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIB10.DEV.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.PRC.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.SHIPUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.GOOGLE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQA.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SFDC.CREATEB2BORDER.SAPPI.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_XMLNSC') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_XMLNSC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRDYSHIPSTS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQA.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GESHIPCONF.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GE.GESHIPCONF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.RETURNNTFCN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD050.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD050.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRMVSHIPMT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POLO.CTRLM.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.DATASTORE') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.DATASTORE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTUK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.ESBOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.ESBERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.DELTAINV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('InputQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.CMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.COREATT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.FACEBOOK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ACE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('App_2.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('App_2.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.INVENTORYRECEIPT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.ORDER.RELEASE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MPA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MFT.TEST1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWCD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.PERF.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ACE.BI.SNOWFLAKE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ACE.BI.SNOWFLAKE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.RPA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RTL1.TT.RLT.APPTDT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.JSON.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BLUJ.PO.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BRNDATT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.ORDERACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.AGCDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.MULTISYS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.STYLEVARIANT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.PGC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLMEUMW.CSM.CATALOG.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.SAP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.DLRY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.IN.TEMP.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.IN.TEMP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTUK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQ4.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.EMEA.INTER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DELTAINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.XSTORE.EMP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.TT.RLT.TTNOTIFR.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL_SAP_EVRYTHNG_ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.CYCLIC.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.TMP.TEST.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.TMP.TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.POSLOG.NAPFS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.RPA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ORDER.OMSOUTPUT.TESTQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.LOG.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDNTFYDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.PMC.TMPTBD032MFG.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.PMC.TMPTBD032MFG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CUSTOMERNUMBERCOUNT.IN1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CUSTOMERNUMBERCOUNT.IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.RLE.CTL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.MATERIAL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.PACKINGSLIP.SFDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDERNOTIFY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.PMC.OMS.ITEMFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.PACKAGING_SLIP_TO_SFDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.TEST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.RETURNASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.DAM.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDNFYVAT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONTRANSFER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ASS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WKDAY.IIB.SAP.EMPPROJ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.REST.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OPP.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHPRODUCTMASTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSAL.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOPR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IMAGE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REQUEST.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMERUK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TMP.TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_XMLNSC1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_XMLNSC1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.EMEA.INTER.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.I9.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.VMS.BI.SUPPLIER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.JDA.OMS.DEMALLOC.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.JDA.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MATMAS05.REPROCESS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPRCPTSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.AE.RS.JSON.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AUDIT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.MULTISYS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.IDTRACKING.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSB.TESTOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.MFT.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.MFT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCUDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.AMQP') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MCOM.SAP.MON.WBS.IN.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.PB.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.LOC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.POSLOG.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Lebelin') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.AWS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.RETURNASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037X.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037X.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTUK.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.BI.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.EU.IN.TEST') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.EU.IN.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD039.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHPRODUCTMASTER.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS2AFTERSHIP.CREATETRACKING.REQUEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFRLS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDERSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BRNDATT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.SNAP.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_JSON') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRUNITCST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IIB.ORDEVTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.OUTPUT.CMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.ITIM.IMARKUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.TVCRFIDSALESRP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.SFCC.VNDRINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIV.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZRD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_JSON_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.FOA.DEV.OMG2MQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.DTA.NARLS.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.DTA.NARLS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.REPORD.PK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.CSR.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.TT.RLT.TTNOTIFR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.LRD.RTVFEED.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.LRD.RTVFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOORDACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.VGC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.LOG.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.PFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.FOA.DEV.OMG2MQ.LOG.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.PRC.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.AGCDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.OMS.ITEMMSTR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIVSPL.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.HUB1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BKNG.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.NA.INTER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.COREATT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.PLACEHOLDERMATMSTR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.CMS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.OUT_RQN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWCD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.SFCC.RTAM.DEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.RN.BI.RTLNXTTRAFFIC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.WFWMATERIAL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLE.XB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MATMAS05.REPROCESS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.OUT_RQA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISREAN13.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADAPT.SAP.IIB.WHDEM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWCD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.PRC.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.RLE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSMARGIN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.GFE.NUO.NOBASCURPR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.PMC.IIB.MATERIAL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ND.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEREVENT.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEREVENT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHRONIZE.PRICE.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.CMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONACK.RESPONSE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.ESB.SENDMAIL.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ASN.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.LOC.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.SAP.OMS.CBSVAT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOP.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.INVOICEPDF_TO_SFDC.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING4.QUEUE') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING4.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.FOE.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.RETURNASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.SNAP.EU.INDEX') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ND.A.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.MATMAS05.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.MADMB.ORDUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.EMEA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFRLS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.LISTENER.TCP.3') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.LISTENER.TCP.1') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSCM.OMS.MADMB.ORDUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.D365.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.INVDELTAFEED.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.INVDELTAFEED.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.CANCELRETURN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.NXTDAY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPCAPCTYSTS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONF.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.PAM.OUT_AMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BRNDATT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD023.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSALSPL.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHORDERHISTORY.INTERMEDIATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.LGTY.TMPTBD046.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.GTM.PAYLOAD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.PRICEBOOK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.BI.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.OMS.INVENTORYRECEIPT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.CMS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLS.XB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.BO.HTR.PI.ITIM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.PICKTICKET.DATASTORE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RL_SAP_EVRYTHNG_MATMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQ4.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.VMS.BI.SUPPLIER.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MATMAS05.PMC.SAP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.BUYER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.SFCC.RTAM.EOD.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.SQR.SQRINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRINVDEL.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.OMS.ITEMMSTR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.CUSTM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.UPS.ZETA.STOREHRS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.RETRYFINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.TJSON') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.TJSON') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.FORTER.SHIPUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.BI.OMS.ITEMMSTR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.LISTENER.TCP.1') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SFDC.CREATEB2BORDER.SAPPI.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WKDAY.IIB.SAP.EMPPROJ.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IMAGE.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IIB.ORDEVTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.PROJ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.REPORDSHPREC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OPP.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.EU.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFRLS.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.ASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FULLINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.TEST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD050.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD050.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMER.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.PMC.OMS.CBSPRICESHEET.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQA.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.BI.SUPPL.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.AE.RS.CSV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.CM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.REPRO.COL.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.REPRO.COL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRINVDEL.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.USER.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RTL1.TMP.ND.IIB.IMP.HMPURORDCNF.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.TMP.ND.IIB.IMP.HMPURORDCNF.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AEM.SAP.DAILY.MATERIAL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.INVOICEPDF.SFDC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL_SAP_EVRYTHNG_ORDERS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.LGTY.TMPTBD046.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.APAC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQUEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.RS.TMPTBD023.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHCUSTOMERMASTERDATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.EMEA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.OUTP.Bankpro') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVDELTA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.MULTI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('Vendor_DP_JSON.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.FORTER.ORDUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DDELAY.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.NA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.ORDERACK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.RESP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BRNDATT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCN.INTERMEDIATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OPP.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('self') +
   GROUP('root') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVDELTA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHCUSTOMERMASTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONXFER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD037.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.ZETA.STOREHRS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.LIQ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.PICKTICKET.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHORT.SHPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.T.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.T.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQ4.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WKDAY.IIB.SAP.EMPPROJ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.AGCDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWBD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE.ZETA') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAMPLE.ZETA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IMAGE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQA.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ORDERS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHRONIZEPRICE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.BI.ORDERCREATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.PROJECTION.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.CREMAS05.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.XCENTER.TYCO.TVCSAMLUSERDATA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.I8.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.RLE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.RESP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IIB.ORDEVTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPIMPACT.INVENTORYFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.ITEMOUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.ITEMOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHORT.SHPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.SHIPREQUEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.LGTY.TMPTBD046.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IA.IP.ALLOCRSLT.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.CMS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISREMPLOY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDSTATUS.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.NARVAR.ORDSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.REBATCH.EMEA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.OMG.TO.MQ.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.IN_PAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.ONORDR.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.OUT.SSB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.PROJECTION.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.INPUT.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.D365.FINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.PRC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.RETURNASN.I9.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AAPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHCUSTOMERMASTER.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.FACT.ATT.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.BLUJ.CONVEY.REGSHIP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('TEST_OUT_1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISREAN13.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.RFIDSALESRP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVDELTA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.AEM.DAM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('TEST.RTL1.TT.RLT.APPTDT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD047.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.US.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.FINAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.RETURNASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.EXTNDMATMSTR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONXFER.RESPONSE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.FULLINV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FLINVDUP.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FLINVDUP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SKU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.SAP.ALL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PMC.BI.PDL.EU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RMA.PUBLISH.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.D365.FINPOST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.MFT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.MFT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.RELATE.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.NOCOR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.DCINVFULLKR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.PMC.TMPTBD032MFG.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.RS.PMC.TMPTBD032MFG.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONFIRM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOSTDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.REPORD.PK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(RQMNAME) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVFULL.PFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.IDTRACKING.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.MSOFT.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.BI.OMS.ITEMMSTR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TMP.TEST.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TMP.TEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('TEST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQ4.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEMS.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.OMS.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDCREDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.NGC.JSON.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.NOCOR.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.IN_PAM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FULLINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDERSTATUS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FIRSTDATA.ACTGC.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SEASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRUNITCST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DELTAINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.CSV.EMEA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.WFWMATERIAL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AUDIT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RETORDER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043R.EU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.FACEBOOK.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZRD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSSAP.IIB.OMS.WHDEM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.DD.SDORDREQ.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.IA.DELTAINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD039.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AEM.SAP.DAILY.MATERIAL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.RLE.XB.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.ZETA.ORDERNOTIFY.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONF.WH.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.CMS.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MAT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCUDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.OUT.TMP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.OUT.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOSTDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AE.AA.ASSOCN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.CSV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.SAP.MON.WBS.LOG.TMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.BI.OMS.ITEMMSTR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.IN_PAM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OPT.SAP.OUTBOUNDASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDCRTUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RRF.ITIM.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.PROJ.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.REPRO.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONXFER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.I9.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ND.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSAL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.SAP.RLEDEM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.NULLDATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.ZETA.ORDERNOTIFY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.HOME') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.HOME') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.PICKTICKET.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.SEC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.ORDERACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.INVDELTAFEED.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.SAP.IIB.INVDELTAFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.LOG2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.TMP.ND.IIB.IMP.HMPURORDCNF.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.TMP.ND.IIB.IMP.HMPURORDCNF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDBC') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDBC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BRNDATT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.CODE.ORDERFEED.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.BI.WEBSTYLE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.KR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.ECC.PI.ITIM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.JDA.OMS.DEMALLOC.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.PMC.REPROCESS.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.ORGHYNZ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('POC.TMP.ND.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.PRODUCT.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.REPORD.PK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOPR.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING2.QUEUE') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSTESTING2.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFLIQ.TRIGGER.DUP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFLIQ.TRIGGER.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.IA.FULLINV.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PO.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('TEST.TMP.AV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.IIB.NUO.NOSHIPMENTNA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('ESB.COMMON.IDTRACKING.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AAPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.FF.IIB.TMPTBD063.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.IN_BOQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIVSPL.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.SFCC.STRINF.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVFULL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.PMC.PICKTICKET.MANUAL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.IN_DAM.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.SHIPUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.PI.ECC.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.NA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.RETURNASN.DATASTORE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.RETRYCUST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHORDERHISTORY.SPLITTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.ACE.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SEASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.BI.OPT.ITEMFEED.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.CMS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSIV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.WRKLST.FULL.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IA.OMS.DEMALLOC.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IA.OMS.DEMALLOC.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.HKDC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.NOTWAYORD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.VNDRINVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001B.OUT.RS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.FORTER.SHIPUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.INTER.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.JSON.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('root') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.IN.ACE') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.SHIPREQUEST.IN.ACE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.ADN.RCNET.PAYMENT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.TMP.ND.WD.SAP.DATA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTM.PERF.TEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTFR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONXFER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ESB.COMMON.HEARTBEAT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MAT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.DTA.EU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.ALOHA.IP.ALOHAFINPOST.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.ALOHA.IP.ALOHAFINPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DAINVDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQUEST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.NAPFS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQ4.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOE.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOA.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.NOCOR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHORDERHISTORY.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.OUT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.IWCD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TW.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD021.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ACE.BI.SNOWFLAKE.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ACE.BI.SNOWFLAKE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.POSLOG.EU.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.OUTPUT.CMS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FLINVDUP.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.CMS.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.SNAP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.ERROROUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TEST.ERROROUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.MY.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.NA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MATMAS05.PMC.SAP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCH.AEAA.ASSOCN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.INBOUNDASN.RLE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.RETURNASN.CM.XB.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FORTER.ORDERUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRINVDEL.IN.OUTS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.PRC.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHRONIZE.PRICEDATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SG.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.T.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.T.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISRSALSPL.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ACE11.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.LOC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.ZETA.ORDNOTIFYEMAIL.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AAPD.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.SDSTRINV.DEFAULT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL.XCENTRE.IP.NAPFS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SSHEET.SHIPUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.MATMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.D365.FINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.REPROCESS.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.IIB.SAP.REPROCESS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TMP.TEST.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.TMP.TEST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.RLT.SQRCUSTOMER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.RETURNASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCRTUPD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.UPS.ZETA.STOREHRS.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.UPS.ZETA.STOREHRS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.CUSTM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2B.ANA.SF.WFWPROJECTION.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.PLM.LGTY.TMPTBD046.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.FOE.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.GCD.ORDCRTUPD.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.DELTA.CA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.EXTNDMATMSTR.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.ASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.LGS.SHIPREQUEST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011MFG.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.TW.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XSTORE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.RETURN.RECEIPT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.MY.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.UPS.ZETA.STOREHRS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.ORDERACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.SSB.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.FLINVDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.CM.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.RETURNASN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BI.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.PRC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.PRC.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.INTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015PLA.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOSTUK.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.PROJ.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.FULLINV.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAP.SAP.ARIBA.REQUI.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.CM.XB.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.SHIPREQDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SEASN.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.SEA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTVFEED.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.LGS.RTVFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EDAM.ESB.ROUTER.OUT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.RETURNASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.FOA.QA.OMG2MQ.LOG.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.TEST.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.IN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOPR.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.PRC.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.RN.BI.RTLNXTTRAFFIC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OQA.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.RMA.CANCELRETURN.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDSTATUS.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.NARVAR.ORDSTATUS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHCUSTOMERMASTER.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.FOA.DEV.DEVOPSTEST.LOG.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.NXTDAY.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('POC.TMP.ND.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MPA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.RPA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.RELATE.UPDATECUST.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDERCREATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.FOE.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IIBA1QM01') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.REBATCH.NA.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.PICKTICKET.RLS.I1.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.RLE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEFAULT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INT.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INT.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.SAP.OMS.DEMALLOC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.GOOGLE.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.CODE.ORDERFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.RETURNASN.I8.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.MULTISYS.FINPOST.QA2.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISREMPLOY.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.INVOICEPDF_TO_SFDC_DATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONF.OUT.DUP') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONF.OUT.DUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.CANCELRETURN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BAOZUN.OMS.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.ZETA.ORDERNOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.ORDFFLMCONF.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BI.ORDERUPDATE.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.REPRO.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCRTUPD.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OPP.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR1') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.CA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.CHUBINVPURCH.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.PICKTICKET.RLS.I2.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.ANA.TMPTBD047.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.SQR.SQRINV.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WKDAY.IIB.SAP.EMPPROJ.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.TEMPIN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.INTER.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.GIVEX.VGCACT.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CHUB.PODUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.OMS.ORDERCREATEOUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('JDA.IP.IA.ALLOC.INTRNST.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.MAT.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCONF.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.SFCC.OMS.ORDCREDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.DCINVDELTAKR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOSTDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.CMS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.REPORD.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.PFS.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.INPUT.FOE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDAILY.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.PIX.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.DEL.HK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONACK.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.CANCELRETURN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.SFCC.BI.ORDERCREATE.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.KR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.JSON.LOG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GCD.RL.FB.LOCAL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('App_2.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('App_2.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TO.IIBA1HD01') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RLAPAC.SFCC.OMS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.AFTERSHIP.SHIPUPDATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.OUTPUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.OUTPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.BI.REPORD.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SFDC.CREATEB2BORDER.SAPPI.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.RTAM.EOD.HK.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.INVOICEPDF_TO_SFDC.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.EOD.APAC.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFLIQ.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.MON.IIB.NOTIFY.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MCOM.MON.IIB.NOTIFY.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.SAP.AV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SCALE.RMA.DETAILS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.LOC.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BNA.ANA.NUO.PLACEHOLDERBASECURPR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.JDA.DAINVDUP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD061.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.IP.FINPOST.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.UPS.OMS.EDISHPTRACK.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.MATMAS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FLINVDUP.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.OMS.JDA.FLINVDUP.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.WMS.RETURNASN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.NA.INTER.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD012.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.CHUB.OMS.POFNCTNLACK.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.SFCC.AWS.ORDERCREATE.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EMBTRAK.DESIGN.SFDC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.SHIPREQUEST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.ORDERS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEVOPS.IIBA1HD01') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.S.EU.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.FINPOST.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FINPOST.EA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015SV.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.CMS.ERROR.DETAILS.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.DCINVDELTAKR.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('RTL1.SAP.TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.DCINVFULLKR.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IA.OMS.DEMALLOC.OUT.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSEU.IA.OMS.DEMALLOC.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.INTER.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.SFCC.RTAM.EOD.US.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.GCD.ORDCRTUPD.ORDER.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.RPL.ISREAN13.IN.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD013.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL2.MICROS.IP.POSLOG.EU.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVDELTA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPCONFIRM.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.INBOUNDASN.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OPTORO.OMS.OPT.INBOUNDASN.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.JDA.TO.IPU.INPUT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042.EU.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLAD1DBH.DEV1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.FF.RTVFEED.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.SEA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.SZOP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.SFCC.RTAM.DEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PMC.BI.PDL.EU.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.ERROR') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BAOZUN.SHIPUPDATE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.PKMS.IIB.SHIPCONFIRM.CM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.WMS.OMS.SHIPCONFIRM.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.SAP.IIB.PICKTICKET.RLS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.IIB.PKMS.INBOUNDASN.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('B2BEMEA.IIB.NUO.INVDELTAFEED.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.SYNCHPRODUCTMASTERDATA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.SAP.FF.FINANCIALPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.PI.ECC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.COREATT.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SRM.PROVIDER.PARTNER.JSON.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAPPI.INVOICEPDF.SFDC.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.BKNG.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINV.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.ASSET.JSON.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.SAP.EVRYTHNG.SAMPLE.CREMAS05') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.LGS.OMS.INVFULL.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.CONVEY.INVUPD.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.MICROS.OMS.POSINVDELTA.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.VMS.O9.SUPPL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.BANKPRO.ORDERUPLOAD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR1.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.ERROR1.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.RS.TMPTBD001A.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('V') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('V') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.RS.NO.NA.CSV.OUT.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.SQR.IP.SQRFINPOST.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.OMS.MICROS.DELTAINVREB.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.INTER') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.FF.TMPTBD062.INTER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.NARVAR.ORDCUDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.IN.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.O9.TMPTBD015.IN.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RLM.OMS.IIB.PICKTICKET.CM.CTL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.EU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOE.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.FOA.ERROR.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('EMBTRAK.DESIGN_TO_SFDC.ERRORDETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD050.OUT') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.BI.IIB.TMPTBD050.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.FORTER.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.SFCC.TMPTBD011SKU.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.BI.ORDERCREATE.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SFCC.OMS.ORDERCREATE.QA2.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.LOC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.IN') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.OMS.BI.ORDERUPDATE.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.WMS.SHIPREQDUP.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.AUDIT.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST.TYCO.RFID') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.NXTDAY') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.IP.RTVFEED.NXTDAY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFRLS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.RPA.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLEU.OMS.GCD.ORDCRTUPD.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GTMTEST') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('AAL.IPU.TO.MAIN.OUTPUT.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RL.MARKETINGFEEDS.GOOGLE.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLNA.YEXT.IIB.STRINFDUP.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.MICROS.OMS.POSINVFULL.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.SCALE.OMS.SHIPCANCEL.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD043.NA.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ERP.HTR.ECC.PI.ITIM.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GFE.GFE.AWS.LOADSUBS.COREATT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.MICROS.TYCO.RFIDSALESRP.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.VBS.RLT.RTCUSTDT.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.BI.SFCC.ITEMMSTR.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSCM.OMS.IP.SHIPREQUEST.TRIGGER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.GFE.TMPTBD026.OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRLAP.OMS.D365.FINPOST.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AAL.IP2MQ2JDA.CMS.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.PKMS.OMS.SHIPCONFLIQ.ERROR.DETAILS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OMSRL.SAP.OMS.DEMALLOC.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.LOG') +
   GROUP('xmftd1pb') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MDM.TMP.ND.IIB.NUO.TMPTBD042R.EU.LOG') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RTL1.IP.TYCO.CARTONACK.ERROR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
*******************************************************************************
* Script ended on 2024-03-08   at 11.12.56 
* Number of Inquiry commands issued: 14 
* Number of Inquiry commands completed: 14 
* Number of Inquiry responses processed: 4425 
* QueueManager count: 1 
* Queue count: 1879 
* NameList count: 3 
* Process count: 1 
* Channel count: 34 
* AuthInfo count: 4 
* Listener count: 4 
* Service count: 2 
* CommInfo count: 1 
* Topic count: 8 
* Subscription count: 4 
* ChlAuthRec count: 66 
* AuthRec count: 2416 
* Number of objects/records: 4423 
*******************************************************************************
